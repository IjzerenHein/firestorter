{"version":3,"file":"firestorter.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/Types.ts","../src/compat.ts","../src/init.ts","../src/Utils.ts","../src/enhancedObservable.ts","../src/Document.ts","../src/Collection.ts","../src/AggregateCollection.ts","../src/GeoHash.ts","../src/GeoQuery.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import type {\n  DocumentReference,\n  DocumentSnapshot,\n  SnapshotOptions,\n  CollectionReference,\n  Query,\n} from 'firebase/firestore';\nimport type { IContext} from './IContext';\n\nexport { IContext };\n\nexport interface IHasContext {\n  readonly context?: IContext;\n}\n\n/**\n * Document Source.\n */\nexport type DocumentSource =\n  | DocumentReference\n  | string\n  | (() => DocumentReference | string | undefined)\n  | undefined;\n\n/**\n * Document options.\n */\nexport interface IDocumentOptions {\n  schema?: any;\n  snapshot?: DocumentSnapshot;\n  snapshotOptions?: SnapshotOptions;\n  mode?: Mode;\n  debug?: boolean;\n  debugName?: string;\n  context?: IContext;\n}\n\n/**\n * Document interface.\n */\nexport interface IDocument {\n  readonly id: string | undefined;\n}\n\n/**\n * Collection interface.\n */\nexport interface ICollection<T> {\n  readonly docs: T[];\n  readonly hasDocs: boolean;\n}\n\n/**\n * Collection-source.\n */\nexport type CollectionSource =\n  | CollectionReference\n  | string\n  | (() => CollectionReference | string | undefined);\n\n/**\n * Collection-query.\n */\nexport type CollectionQuery = ((ref: CollectionReference) => Query | null | undefined) | Query;\n\n/**\n * Collection options.\n */\nexport interface ICollectionOptions<T> {\n  query?: CollectionQuery;\n  createDocument?: (source: DocumentSource, options: IDocumentOptions) => T;\n  mode?: Mode;\n  debug?: boolean;\n  debugName?: string;\n  minimizeUpdates?: boolean;\n  initialLocalSnapshotDetectTime?: number;\n  initialLocalSnapshotDebounceTime?: number;\n  context?: IContext;\n}\n\n/**\n * Collection document.\n */\nexport interface ICollectionDocument extends IDocument {\n  addCollectionRef(): number;\n  releaseCollectionRef(): number;\n  updateFromCollectionSnapshot(snapshot: DocumentSnapshot): void;\n}\n\n/**\n * Real-time updating mode.\n * @type Mode\n */\nexport enum Mode {\n  Auto = 'auto',\n  On = 'on',\n  Off = 'off',\n}\n\n/**\n * @private\n */\nexport interface IEnhancedObservableDelegate {\n  addObserverRef(): number;\n  releaseObserverRef(): number;\n}\n","import type Firebase from 'firebase/compat/app';\n\nimport type { IContext } from './IContext';\n\nexport type FirestorterCompatConfig = {\n  firebase: typeof Firebase;\n  app?: string | Firebase.app.App;\n  firestore?: Firebase.firestore.Firestore;\n};\n\n/**\n * Creates a firestorter compat context.\n *\n * @param {Object} config - Configuration options\n * @param {Firebase} config.firebase - Firebase instance\n * @param {FirebaseApp | string} [config.app] - Firebase app instance or name\n * @param {Firestore} [config.firestore] - Firestore instance\n *\n * @example\n * import firebase from 'firebase/compat/app';\n * import 'firebase/compat/firestore';\n * import { Collection, Document, makeCompatContext } from 'firestorter'\n *\n * // Initialize firebase app\n * firebase.initializeApp({...});\n *\n * // Initialize global `firestorter` context\n * initFirestorter(makeCompatContext({ firebase: firebase }));\n *\n * // Create collection or document\n * const albums = new Collection('artists/Metallica/albums');\n * ...\n * const album = new Document('artists/Metallica/albums/BlackAlbum');\n * ...\n *\n * // Or create a custom context to connect to another Firebase app\n * const app2 = firebase.initializeApp({...});\n * const app2Context = makeCompatContext({ firebase: firebase, app: app2 });\n *\n * // Create collection or document\n * const albums2 = new Collection('artists/Metallica/albums', {context: app2Context});\n * ...\n * const album2 = new Document('artists/Metallica/albums/BlackAlbum', {context: app2Context});\n * ...\n */\nexport function makeCompatContext(config: FirestorterCompatConfig): IContext {\n  const { firebase } = config;\n\n  // Get app instance\n  const app = config.app\n    ? typeof config.app === 'string'\n      ? firebase.app(config.app)\n      : config.app\n    : firebase.app();\n\n  // Get firestore instance\n  const firestore = config.firestore ?? app.firestore();\n  if (!firestore) {\n    throw new Error(\n      \"firebase.firestore() returned `undefined`, did you forget `import 'firebase/firestore';` ?\"\n    );\n  }\n\n  return {\n    // @ts-ignore\n    collection: (path: string) => firestore.collection(path),\n    // @ts-ignore\n    doc: (path: string) => firestore.doc(path),\n    // @ts-ignore\n    getDocs: (ref) => ref.get(),\n    // @ts-ignore\n    where: (fieldPath, opStr, value) => [fieldPath, opStr, value],\n    // @ts-ignore\n    query: (ref, where1, where2, where3) => {\n      // @ts-ignore\n      ref = where1 ? ref.where(where1[0], where1[1], where1[2]) : ref;\n      // @ts-ignore\n      ref = where2 ? ref.where(where2[0], where2[1], where2[2]) : ref;\n      // @ts-ignore\n      ref = where3 ? ref.where(where3[0], where3[1], where3[2]) : ref;\n      return ref;\n    },\n    // @ts-ignore\n    addDoc: (ref, data) => ref.add(data),\n    // @ts-ignore\n    getDoc: (ref) => ref.get(),\n    // @ts-ignore\n    setDoc: (ref, data, options) => ref.set(data, options),\n    // @ts-ignore\n    updateDoc: (ref, fields) => ref.update(fields),\n    // @ts-ignore\n    deleteDoc: (ref) => ref.delete(),\n    // @ts-ignore\n    onSnapshot: (ref, resultFn, errorFn) => ref.onSnapshot(resultFn, errorFn),\n    // @ts-ignore\n    deleteField: () => firebase.firestore.FieldValue.delete(),\n  // @ts-ignore\n    serverTimestamp: () => firebase.firestore.FieldValue.serverTimestamp(),\n  };\n}\n","import type { IContext, IHasContext} from './Types';\nimport { makeCompatContext,  FirestorterCompatConfig } from './compat';\n\n  let globalContext: IContext;\n  \n  /**\n   * Initializes `firestorter` with the firebase-app.\n   *\n   * @param {IContext | FirestorterCompatConfig} config - Configuration options\n   *\n   * @example\n   * import { initializeApp } from 'firebase/app';\n   * import { getFirestore } from 'firebase/firestore';\n   * import { initFirestorter, Collection, Document } from 'firestorter'; \n   *\n   * // Initialize firebase app\n   * const app = initializeApp({...});\n   * const firestore = getFirestore(app);\n   *\n   * // Initialize `firestorter`\n   * initFirestorter({ app, firestore });\n   *\n   * // Create collection or document\n   * const albums = new Collection('artists/Metallica/albums');\n   * ...\n   * const album = new Document('artists/Metallica/albums/BlackAlbum');\n   * ...\n   */\n  export function initFirestorter(context: IContext | FirestorterCompatConfig) {\n    if (globalContext) {\n      throw new Error(\n        'Firestorter already initialized, did you accidentally call `initFirestorter()` again?'\n      );\n    }\n    // @ts-expect-error Property 'collection' does not exist on type 'IContext | FirestorterCompatConfig'.\n    if (context.collection) {\n      globalContext = context as IContext ;  \n    } else {\n      globalContext = makeCompatContext(context as FirestorterCompatConfig);\n    }\n    return globalContext;\n  }\n  \n  export function getContext(obj?: IHasContext): IContext {\n    if (obj?.context) {\n      return obj.context;\n    }\n  \n    if (globalContext) {\n      return globalContext;\n    }\n  \n    if (obj) {\n      throw new Error(\n        `No context for ${obj} or globally. Did you forget to call \\`initFirestorter\\` or pass {context: ...} option?`\n      );\n    }\n  \n    throw new Error(`No global Firestore context. Did you forget to call \\`initFirestorter\\` ?`);\n  }\n  ","import isEqual from 'lodash.isequal';\n\nimport { Mode, IHasContext } from './Types';\nimport { getContext } from './init';\n\nexport { isEqual };\n\n/**\n * Helper function which merges data into the source\n * and returns the new object.\n *\n * @param {Object} data - JSON data\n * @param {Object} fields - JSON data that supports field-paths\n * @return {Object} Result\n */\nexport function mergeUpdateData(data: object, fields: object, hasContext?: IHasContext) {\n  const res = {\n    ...data,\n  };\n  const canonicalDelete = getContext(hasContext).deleteField();\n  for (const key in fields) {\n    if (fields.hasOwnProperty(key)) {\n      // @ts-ignore\n      const val = fields[key];\n      const isDelete = canonicalDelete.isEqual\n        ? canonicalDelete.isEqual(val)\n        : isEqual(canonicalDelete, val);\n      const paths = key.split('.');\n      let dataVal: any = res;\n      for (let i = 0; i < paths.length - 1; i++) {\n        if (dataVal[paths[i]] === undefined) {\n          if (isDelete) {\n            dataVal = undefined;\n            break;\n          }\n          dataVal[paths[i]] = {};\n        } else {\n          dataVal[paths[i]] = {\n            ...dataVal[paths[i]],\n          };\n        }\n        dataVal = dataVal[paths[i]];\n      }\n      if (isDelete) {\n        if (dataVal) {\n          delete dataVal[paths[paths.length - 1]];\n        }\n      } else {\n        dataVal[paths[paths.length - 1]] = val;\n      }\n    }\n  }\n  return res;\n}\n\nexport function verifyMode(mode: Mode): Mode {\n  switch (mode) {\n    case 'auto':\n    case 'off':\n    case 'on':\n      return mode;\n    default:\n      throw new Error('Invalid mode mode: ' + mode);\n  }\n}\n\n/**\n * Checks whether the provided value is a valid Firestore Timestamp or Date.\n *\n * Use this function in combination with schemas, in order to validate\n * that the field in the document is indeed a timestamp.\n *\n * @param {Object} val - Value to check\n * @return {Boolean}\n *\n * @example\n * import { isTimestamp } from 'firestorter';\n *\n * const TaskSchema = struct({\n *  name: 'string',\n *  startDate: isTimestamp,\n *  duration: 'number'\n * });\n *\n * const doc = new Document('tasks/mytask', {\n *   schema: TaskSchema\n * });\n * await doc.fetch();\n * console.log('startDate: ', doc.data.startDate.toDate());\n */\nexport function isTimestamp(val: any): boolean {\n  if (val instanceof Date) {\n    return true;\n  }\n  return (\n    typeof val === 'object' &&\n    typeof val.seconds === 'number' &&\n    typeof val.nanoseconds === 'number'\n  );\n}\n","import { observable, onBecomeObserved, onBecomeUnobserved } from 'mobx';\n\nimport { IEnhancedObservableDelegate } from './Types';\n\n/**\n * @ignore\n * Creates an observable which calls addObserverRef &\n * releaseObserverRef methods on the passed-in delegate class.\n * Effectively, this allows Firestorter to track whether\n * a Collection/Document is observed and real-time updating\n * needs to be enabled on it.\n */\nexport function enhancedObservable(data: any, delegate: IEnhancedObservableDelegate): any {\n  const o = Array.isArray(data) ? observable.array(data) : observable.box(data);\n  let isObserved = false;\n  onBecomeUnobserved(o, undefined, () => {\n    if (isObserved) {\n      isObserved = false;\n      delegate.releaseObserverRef();\n    }\n  });\n  onBecomeObserved(o, undefined, () => {\n    if (!isObserved) {\n      isObserved = true;\n      delegate.addObserverRef();\n    }\n  });\n  return o;\n}\n","import type {\n  DocumentReference,\n  DocumentSnapshot,\n  SnapshotOptions,\n  DocumentData,\n} from 'firebase/firestore';\nimport { observable, reaction, toJS, runInAction, IObservableValue } from 'mobx';\n\nimport {\n  DocumentSource,\n  ICollectionDocument,\n  // IDocument,\n  IDocumentOptions,\n  IEnhancedObservableDelegate,\n  Mode,\n  IContext, IHasContext\n} from './Types';\nimport { mergeUpdateData, verifyMode, isEqual } from './Utils';\nimport { enhancedObservable } from './enhancedObservable';\nimport { getContext  } from './init';\n\n/**\n * @private\n */\nfunction resolveRef(value: DocumentSource, hasContext: IHasContext): DocumentReference | undefined {\n  if (typeof value === 'string') {\n    return getContext(hasContext).doc(value);\n  } else if (typeof value === 'function') {\n    return resolveRef(value(), hasContext);\n  } else {\n    return value;\n  }\n}\n\nconst EMPTY_OPTIONS = {};\n\n/**\n * Document represents a document stored in the firestore database.\n * Document is observable so that it can be efficiently linked to for instance\n * a React Component using `mobx-react`'s `observer` pattern. This ensures that\n * a component is only re-rendered when data that is accessed in the `render`\n * function has changed.\n *\n * @param {DocumentSource} [source] String-path, ref or function that returns a path or ref\n * @param {Object} [options] Configuration options\n * @param {String} [options.mode] See `Document.mode` (default: auto)\n * @param {Function} [options.schema] Superstruct schema for data validation\n * @param {firestore.DocumentSnapshot} [options.snapshot] Initial document snapshot\n * @param {firestore.SnapshotOptions} [options.snapshotOptions] Options that configure how data is retrieved from a snapshot\n * @param {boolean} [options.debug] Enables debug logging\n * @param {String} [options.debugName] Name to use when debug logging is enabled\n */\nclass Document<T extends object = object>\n  implements ICollectionDocument, IEnhancedObservableDelegate, IHasContext\n{\n  private sourceInput: DocumentSource;\n  private sourceDisposerFn?: () => void;\n  private refObservable: IObservableValue<DocumentReference<DocumentData>>;\n  private snapshotObservable: IObservableValue<DocumentSnapshot | undefined>;\n  private snapshotOptions?: SnapshotOptions;\n  private docSchema?: (data: object) => object;\n  private isVerbose: boolean;\n  private debugInstanceName?: string;\n  private collectionRefCount: number;\n  private observedRefCount: number;\n  private dataObservable: IObservableValue<T>;\n  private modeObservable: IObservableValue<Mode>;\n  private isLoadingObservable: IObservableValue<boolean>;\n  private onSnapshotUnsubscribeFn?: () => void;\n  private readyPromise?: Promise<void>;\n  private readyResolveFn?: () => void;\n  private ctx?: IContext;\n\n  constructor(source?: DocumentSource, options: IDocumentOptions = {}) {\n    const { schema, snapshot, snapshotOptions, mode, debug, debugName, context } = options;\n    this.debugInstanceName = debugName;\n    this.sourceInput = source;\n    this.ctx = context;\n    this.refObservable = observable.box(resolveRef(source, this));\n    this.docSchema = schema;\n    this.isVerbose = debug || false;\n    this.snapshotObservable = enhancedObservable(snapshot, this);\n    this.snapshotOptions = snapshotOptions;\n    this.collectionRefCount = 0;\n    this.observedRefCount = 0;\n    let data = snapshot ? snapshot.data(this.snapshotOptions) : undefined;\n    if (data) {\n      data = this._validateSchema(data);\n    }\n    this.dataObservable = enhancedObservable(data || EMPTY_OPTIONS, this);\n    this.modeObservable = observable.box(verifyMode(mode || Mode.Auto));\n    this.isLoadingObservable = observable.box(false);\n    this._updateSourceObserver();\n    if (mode === Mode.On) {\n      runInAction(() => this._updateRealtimeUpdates());\n    }\n  }\n\n  /**\n   * Returns the superstruct schema used to validate the\n   * document, or undefined.\n   *\n   * @type {Function}\n   */\n  public get schema(): ((data: any) => any) | undefined {\n    return this.docSchema;\n  }\n\n  /**\n   * Returns the data inside the firestore document.\n   *\n   * @type {Object}\n   *\n   * @example\n   * todos.docs.map((doc) => {\n   *   console.log(doc.data);\n   *   // {\n   *   //   finished: false\n   *   //   text: 'Must do this'\n   *   // }\n   * });\n   */\n  public get data(): T {\n    return this.dataObservable.get();\n  }\n\n  /**\n   * True whenever the document has fetched any data.\n   *\n   * @type {boolean}\n   */\n  public get hasData(): boolean {\n    const { snapshot } = this;\n    if (!snapshot) return false;\n    return typeof snapshot.exists === 'boolean' ? (snapshot.exists as any) : snapshot.exists();\n  }\n\n  /**\n   * Firestore document reference.\n   *\n   * Use this property to get or set the\n   * underlying document reference.\n   *\n   * Alternatively, you can also use `path` to change the\n   * reference in more a readable way.\n   *\n   * @type {firestore.DocumentReference | Function}\n   *\n   * @example\n   * const doc = new Document('albums/splinter');\n   *\n   * // Get the DocumentReference for `albums/splinter`\n   * const ref = doc.ref;\n   *\n   * // Switch to another document\n   * doc.ref = firebase.firestore().doc('albums/americana');\n   */\n  public get ref(): DocumentReference | undefined {\n    return this.refObservable.get();\n  }\n  public set ref(ref: DocumentReference | undefined) {\n    this.source = ref;\n  }\n\n  /**\n   * Id of the firestore document.\n   *\n   * To get the full-path of the document, use `path`.\n   *\n   * @type {string}\n   */\n  public get id(): string | undefined {\n    const ref = this.refObservable.get();\n    return ref ? ref.id : undefined;\n  }\n\n  /**\n   * Path of the document (e.g. 'albums/blackAlbum').\n   *\n   * Use this property to switch to another document in\n   * the back-end. Effectively, it is a more compact\n   * and readable way of setting a new ref.\n   *\n   * @type {string | Function}\n   *\n   * @example\n   * const doc = new Document('artists/Metallica');\n   * ...\n   * // Switch to another document in the back-end\n   * doc.path = 'artists/EaglesOfDeathMetal';\n   *\n   * // Or, you can use a reactive function to link\n   * // to the contents of another document.\n   * const doc2 = new Document('settings/activeArtist');\n   * doc.path = () => 'artists/' + doc2.data.artistId;\n   */\n  public get path(): string | (() => string | undefined) | undefined {\n    // if we call toString() during initialization, eg to throw an error referring to this\n    // document, this would throw an undefined error without the guard.\n    let ref = this.refObservable?.get();\n    if (!ref) {\n      return undefined;\n    }\n    let path = ref.id;\n    while (ref.parent) {\n      path = ref.parent.id + '/' + path;\n      // @ts-ignore\n      ref = ref.parent;\n    }\n    return path;\n  }\n  public set path(documentPath: string | (() => string | undefined) | undefined) {\n    this.source = documentPath;\n  }\n\n  /**\n   * @private\n   */\n  public get source(): DocumentSource {\n    return this.sourceInput;\n  }\n  public set source(source: DocumentSource) {\n    if (this.collectionRefCount) {\n      throw new Error('Cannot change source on Document that is controlled by a Collection');\n    }\n    if (this.sourceInput === source) {\n      return;\n    }\n    this.sourceInput = source;\n    this._updateSourceObserver();\n    runInAction(() => {\n      this.refObservable.set(resolveRef(source, this)!);\n      this._updateRealtimeUpdates(true);\n    });\n  }\n\n  /**\n   * Real-time updating mode.\n   *\n   * Can be set to any of the following values:\n   * - \"auto\" (enables real-time updating when the document becomes observed)\n   * - \"off\" (no real-time updating, you need to call fetch explicitly)\n   * - \"on\" (real-time updating is permanently enabled)\n   *\n   * @type {string}\n   */\n  public get mode(): Mode {\n    return this.modeObservable.get();\n  }\n  public set mode(mode: Mode) {\n    if (this.modeObservable.get() === mode) {\n      return;\n    }\n    verifyMode(mode);\n    runInAction(() => {\n      this.modeObservable.set(mode);\n      this._updateRealtimeUpdates();\n    });\n  }\n\n  /**\n   * Returns true when the Document is actively listening\n   * for changes in the firestore back-end.\n   *\n   * @type {boolean}\n   */\n  public get isActive(): boolean {\n    return !!this.onSnapshotUnsubscribeFn;\n  }\n\n  /**\n   * Underlying firestore snapshot.\n   *\n   * @type {firestore.DocumentSnapshot}\n   */\n  public get snapshot(): DocumentSnapshot | undefined {\n    return this.snapshotObservable.get();\n  }\n\n  /**\n   * Updates one or more fields in the document.\n   *\n   * The update will fail if applied to a document that does\n   * not exist.\n   *\n   * @param {Object} fields - Fields to update\n   * @return {Promise}\n   *\n   * @example\n   * await todoDoc.update({\n   *   finished: true,\n   *   text: 'O yeah, checked this one off',\n   *   foo: {\n   *     bar: 10\n   *   }\n   * });\n   */\n  public update(fields: object): Promise<void> {\n    const ref = this.refObservable.get();\n    if (this.docSchema) {\n      if (!this.snapshot) {\n        console.warn(\n          `${this.debugName} - Unable to verify schema in .update() because the document has not been fetched yet`\n        );\n      } else {\n        try {\n          this._validateSchema(mergeUpdateData(toJS(this.data), fields));\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n    }\n    return getContext(this).updateDoc(ref, fields);\n  }\n\n  /**\n   * Writes to the document.\n   *\n   * If the document does not exist yet, it will be created.\n   * If you pass options, the provided data can be merged into\n   * the existing document.\n   *\n   * @param {Object} data - An object of the fields and values for the document\n   * @param {Object} [options] - Set behaviour options\n   * @param {Boolean} [options.merge] - Set to `true` to only replace the values specified in the data argument. Fields omitted will remain untouched.\n   * @return {Promise}\n   *\n   * @example\n   * const todo = new Document('todos/mynewtodo');\n   * await todo.set({\n   *   finished: false,\n   *   text: 'this is awesome'\n   * });\n   */\n  public set(data: any, options?: any): Promise<void> {\n    if (this.docSchema) {\n      try {\n        if (options?.merge) {\n          this._validateSchema(mergeUpdateData(toJS(this.data), data));\n        } else {\n          this._validateSchema(data);\n        }\n      } catch (err) {\n        return Promise.reject(err);\n      }\n    }\n    return getContext(this).setDoc(this.refObservable.get(), data, options);\n  }\n\n  /**\n   * Deletes the document in Firestore.\n   *\n   * Returns a promise that resolves once the document has been\n   * successfully deleted from the backend (Note that it won't\n   * resolve while you're offline).\n   *\n   * @return {Promise}\n   */\n  public delete(): Promise<void> {\n    return getContext(this).deleteDoc(this.refObservable.get());\n  }\n\n  /**\n   * Fetches new data from firestore. Use this to manually fetch\n   * new data when `mode` is set to 'off'.\n   *\n   * @return {Promise}\n   * @fullfil {Document<T>} This document\n   *\n   * @example\n   * const doc = new Document('albums/splinter');\n   * await doc.fetch();\n   * console.log('data: ', doc.data);\n   */\n  public async fetch(): Promise<Document<T>> {\n    if (this.isVerbose) {\n      console.debug(`${this.debugName} - fetching...`);\n    }\n    if (this.collectionRefCount) {\n      throw new Error('Should not call fetch on Document that is controlled by a Collection');\n    }\n    if (this.isActive) {\n      throw new Error('Should not call fetch when real-time updating is active');\n    }\n    if (this.isLoadingObservable.get()) {\n      throw new Error('Fetch already in progress');\n    }\n    const ref = this.refObservable.get();\n    if (!ref) {\n      throw new Error('No ref or path set on Document');\n    }\n    runInAction(() => {\n      this._ready(false);\n      this.isLoadingObservable.set(true);\n    });\n    try {\n      const snapshot = await getContext(this).getDoc(ref);\n      runInAction(() => {\n        this.isLoadingObservable.set(false);\n        this._updateFromSnapshot(snapshot);\n        if (this.isVerbose) {\n          console.debug(`${this.debugName} - fetched: ${JSON.stringify(toJS(this.data))}`);\n        }\n      });\n      this._ready(true);\n    } catch (err) {\n      console.log(`${this.debugName} - fetch failed: ${(err as Error).message}`);\n      runInAction(() => {\n        this.isLoadingObservable.set(false);\n        this._updateFromSnapshot(undefined);\n        this._ready(true);\n      });\n      throw err;\n    }\n    return this;\n  }\n\n  /**\n   * True when new data is being loaded.\n   *\n   * Loads are performed in these cases:\n   *\n   * - When real-time updating is started\n   * - When a different `ref` or `path` is set\n   * - When a `query` is set or cleared\n   * - When `fetch` is explicitly called\n   *\n   * @type {boolean}\n   *\n   * @example\n   * const doc = new Document('albums/splinter', {mode: 'off'});\n   * console.log(doc.isLoading); \t// false\n   * doc.fetch(); \t\t\t\t\t\t\t\t// start fetch\n   * console.log(doc.isLoading); \t// true\n   * await doc.ready(); \t\t\t\t\t// wait for fetch to complete\n   * console.log(doc.isLoading); \t// false\n   *\n   * @example\n   * const doc = new Document('albums/splinter');\n   * console.log(doc.isLoading); \t// false\n   * const dispose = autorun(() => {\n   *   console.log(doc.data);\t\t\t// start observing document data\n   * });\n   * console.log(doc.isLoading); \t// true\n   * ...\n   * dispose();\t\t\t\t\t\t\t\t\t\t// stop observing document data\n   * console.log(doc.isLoading); \t// false\n   */\n  public get isLoading(): boolean {\n    this.dataObservable.get(); // access data\n    return this.isLoadingObservable.get();\n  }\n\n  /**\n   * True when a snapshot has been obtained from the Firestore\n   * back-end. This property indicates whether an initial fetch/get call\n   * to Firestore has completed processing. This doesn't however mean that data\n   * is available, as the returned snapshot may contain a value indicating\n   * that the document doesn't exist. Use `hasData` to check whether any\n   * data was succesfully retrieved.\n   *\n   * @type {boolean}\n   */\n  public get isLoaded(): boolean {\n    const { snapshot } = this;\n    return !!snapshot;\n  }\n\n  /**\n   * Promise that is resolved when the Document has\n   * data ready to be consumed.\n   *\n   * Use this function to for instance wait for\n   * the initial snapshot update to complete, or to wait\n   * for fresh data after changing the path/ref.\n   *\n   * @return {Promise}\n   *\n   * @example\n   * const doc = new Document('albums/splinter', {mode: 'on'});\n   * await doc.ready();\n   * console.log('data: ', doc.data);\n   *\n   * @example\n   * const doc = new Document('albums/splinter', {mode: 'on'});\n   * await doc.ready();\n   * ...\n   * // Changing the path causes a new snapshot update\n   * doc.path = 'albums/americana';\n   * await doc.ready();\n   * console.log('data: ', doc.data);\n   */\n  public ready(): Promise<void> {\n    this.readyPromise = this.readyPromise || Promise.resolve();\n    return this.readyPromise;\n  }\n\n  public toString(): string {\n    return this.debugName;\n  }\n\n  /**\n   * @private\n   */\n  public get debugName(): string {\n    return `${this.debugInstanceName || this.constructor.name} (${this.path})`;\n  }\n\n  /**\n   * @private\n   */\n  public get context(): IContext | undefined {\n    return this.ctx;\n  }\n\n  /**\n   * Called whenever a property of this class becomes observed.\n   * @private\n   */\n  public addObserverRef(): number {\n    if (this.isVerbose) {\n      console.debug(`${this.debugName} - addRef (${this.observedRefCount + 1})`);\n    }\n    const res = ++this.observedRefCount;\n    if (res === 1) {\n      runInAction(() => this._updateRealtimeUpdates());\n    }\n    return res;\n  }\n\n  /**\n   * Called whenever a property of this class becomes un-observed.\n   * @private\n   */\n  public releaseObserverRef(): number {\n    if (this.isVerbose) {\n      console.debug(`${this.debugName} - releaseRef (${this.observedRefCount - 1})`);\n    }\n    const res = --this.observedRefCount;\n    if (!res) {\n      runInAction(() => this._updateRealtimeUpdates());\n    }\n    return res;\n  }\n\n  /**\n   * ICollectionDocument\n   * @private\n   */\n  public addCollectionRef(): number {\n    return ++this.collectionRefCount;\n  }\n  public releaseCollectionRef(): number {\n    return --this.collectionRefCount;\n  }\n  public updateFromCollectionSnapshot(snapshot: DocumentSnapshot): void {\n    return this._updateFromSnapshot(snapshot);\n  }\n\n  /**\n   * @private\n   */\n  public _updateFromSnapshot(snapshot?: DocumentSnapshot): void {\n    let data: any = snapshot ? snapshot.data(this.snapshotOptions) : undefined;\n    if (data) {\n      data = this._validateSchema(data);\n    } else {\n      data = {};\n    }\n    this.snapshotObservable.set(snapshot);\n\n    if (!isEqual(data, this.dataObservable.get())) {\n      this.dataObservable.set(data);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _ready(complete: boolean) {\n    if (complete) {\n      const readyResolve = this.readyResolveFn;\n      if (readyResolve) {\n        this.readyResolveFn = undefined;\n        readyResolve();\n      }\n    } else if (!this.readyResolveFn) {\n      this.readyPromise = new Promise((resolve) => {\n        this.readyResolveFn = resolve;\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _onSnapshot(snapshot: DocumentSnapshot) {\n    runInAction(() => {\n      if (this.isVerbose) {\n        console.debug(`${this.debugName} - onSnapshot`);\n      }\n      this.isLoadingObservable.set(false);\n      try {\n        this._updateFromSnapshot(snapshot);\n      } catch (err) {\n        console.error((err as Error).message);\n      }\n      this._ready(true);\n    });\n  }\n\n  /**\n   * @private\n   */\n  protected _onSnapshotError(error: Error): void {\n    console.warn(`${this.debugName} - onSnapshotError: ${error.message}`);\n  }\n\n  /**\n   * @private\n   */\n  private _updateRealtimeUpdates(force?: boolean): void {\n    let newActive = false;\n    switch (this.modeObservable.get()) {\n      case Mode.Auto:\n        newActive = !!this.observedRefCount;\n        break;\n      case Mode.Off:\n        newActive = false;\n        break;\n      case Mode.On:\n        newActive = true;\n        break;\n    }\n\n    // Start/stop listening for snapshot updates\n    if (this.collectionRefCount || !this.refObservable.get()) {\n      newActive = false;\n    }\n    const active = !!this.onSnapshotUnsubscribeFn;\n    if (newActive && (!active || force)) {\n      if (this.isVerbose) {\n        console.debug(\n          `${this.debugName} - ${active ? 're-' : ''}start (${this.modeObservable.get()}:${\n            this.observedRefCount\n          })`\n        );\n      }\n      this._ready(false);\n      this.isLoadingObservable.set(true);\n      this.onSnapshotUnsubscribeFn?.();\n      this.onSnapshotUnsubscribeFn = getContext(this).onSnapshot(\n        this.refObservable.get(),\n        (snapshot) => this._onSnapshot(snapshot),\n        (err) => this._onSnapshotError(err)\n      );\n    } else if (!newActive && active) {\n      if (this.isVerbose) {\n        console.debug(\n          `${this.debugName} - stop (${this.modeObservable.get()}:${this.observedRefCount})`\n        );\n      }\n      this.onSnapshotUnsubscribeFn?.();\n      this.onSnapshotUnsubscribeFn = undefined;\n      if (this.isLoadingObservable.get()) {\n        this.isLoadingObservable.set(false);\n      }\n      this._ready(true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  private _updateSourceObserver() {\n    if (this.sourceDisposerFn) {\n      this.sourceDisposerFn();\n      this.sourceDisposerFn = undefined;\n    }\n    if (typeof this.sourceInput === 'function') {\n      this.sourceDisposerFn = reaction(\n        () => (this.sourceInput as () => DocumentReference | string | undefined)(),\n        (value) => {\n          runInAction(() => {\n            // TODO, check whether path has changed\n            this.refObservable.set(resolveRef(value, this)!);\n            this._updateRealtimeUpdates(true);\n          });\n        }\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  private _validateSchema(data: any): T {\n    if (!this.docSchema) {\n      return data;\n    }\n    try {\n      data = this.docSchema(data);\n    } catch (err) {\n      // console.log(JSON.stringify(err));\n\n      throw new Error(\n        'Invalid value at \"' +\n          (err as any).path +\n          '\" for ' +\n          (this.debugInstanceName || this.constructor.name) +\n          ' with id \"' +\n          this.id +\n          '\": ' +\n          (err as Error).message\n      );\n    }\n    return data;\n  }\n}\n\nexport default Document;\n","import type {\n  Query,\n  CollectionReference,\n  QuerySnapshot,\n  SnapshotListenOptions,\n  DocumentSnapshot,\n} from 'firebase/firestore';\nimport { IObservableArray, IObservableValue, observable, reaction, runInAction } from 'mobx';\n\nimport Document from './Document';\nimport {\n  CollectionQuery,\n  CollectionSource,\n  DocumentSource,\n  ICollectionDocument,\n  ICollectionOptions,\n  ICollection,\n  IDocumentOptions,\n  IEnhancedObservableDelegate,\n  Mode,\n  IContext, IHasContext\n} from './Types';\nimport { verifyMode } from './Utils';\nimport { enhancedObservable } from './enhancedObservable';\nimport { getContext } from './init';\n\n// * @param {Number} [options.limit] Maximum number of documents to fetch (see `Collection.limit`)\n\n/**\n * The Collection class lays at the heart of `firestorter`.\n * It represents a collection in Firestore and its queried data. It is\n * observable so that it can be efficiently linked to a React Component\n * using `mobx-react`'s `observer` pattern.\n *\n * Collection supports three modes of real-time updating:\n * - \"auto\" (real-time updating is enabled on demand) (default)\n * - \"on\" (real-time updating is permanently turned on)\n * - \"off\" (real-time updating is turned off, use `.fetch` explicitly)\n *\n * The \"auto\" mode ensures that Collection only communicates with\n * the firestore back-end whever the Collection is actually\n * rendered by a Component. This prevents unneccesary background\n * updates and leads to the best possible performance.\n *\n * When real-time updates are enabled, data is automatically fetched\n * from Firestore whenever it changes in the back-end (using `onSnapshot`).\n * This enables almost magical instant updates. When data is changed,\n * only those documents are updated that have actually changed. Document\n * objects are re-used where possible, and just their data is updated.\n * The same is true for the `docs` property. If no documents where\n * added, removed, re-ordered, then the `docs` property itself will not\n * change.\n *\n * Alternatively, you can keep real-time updates turned off and fetch\n * manually. This will update the Collection as efficiently as possible.\n * If nothing has changed on the back-end, no new Documents would be\n * created or modified.\n *\n * @param {CollectionSource} [source] String-path, ref or function that returns a path or ref\n * @param {Object} [options] Configuration options\n * @param {Function|Query} [options.query] See `Collection.query`\n * @param {String} [options.mode] See `Collection.mode`\n * @param {Function} [options.createDocument] Factory function for creating documents `(source, options) => new Document(source, options)`\n * @param {boolean} [options.minimizeUpdates] Enables additional algorithms to reduces updates to your app (e.g. when snapshots are received in rapid succession)\n * @param {boolean} [options.debug] Enables debug logging\n * @param {String} [options.debugName] Name to use when debug logging is enabled\n *\n * @example\n * import {Collection} from 'firestorter';\n *\n * // Create a collection using path (preferred)\n * const col = new Collection('artists/Metallica/albums');\n *\n * // Create a collection using a reference\n * const col2 = new Collection(firebase.firestore().collection('todos'));\n *\n * // Create a collection and permanently start real-time updating\n * const col2 = new Collection('artists', {\n *   mode: 'on'\n * });\n *\n * // Create a collection with a query on it\n * const col3 = new Collection('artists', {\n *   query: (ref) => ref.orderBy('name', 'asc')\n * });\n *\n * @example\n * // In manual mode, just call `fetch` explicitly\n * const col = new Collection('albums', {mode: 'off'});\n * col.fetch().then((collection) => {\n *   collection.docs.forEach((doc) => console.log(doc));\n * });\n *\n * // Yo can use the `isLoading` property to see whether a fetch\n * // is in progress\n * console.log(col.isLoading);\n */\nclass Collection<T extends ICollectionDocument = Document>\n  implements ICollection<T>, IEnhancedObservableDelegate, IHasContext\n{\n  private sourceInput?: CollectionSource;\n  private sourceCache?: CollectionSource;\n  private sourceCacheRef?: CollectionReference;\n  private refDisposerFn?: () => void;\n  private refObservable: IObservableValue<CollectionReference | undefined>;\n  private queryInput?: CollectionQuery;\n  private queryRefObservable: IObservableValue<Query | null | undefined>;\n  private onSnapshotRefCache: Query | undefined | null;\n  private modeObservable: IObservableValue<Mode>;\n  private isLoadingObservable: IObservableValue<boolean>;\n  private isLoadedObservable: IObservableValue<boolean>;\n  private docLookup: { [name: string]: T };\n  private docsObservable: IObservableArray<T>;\n  private hasDocsObservable: IObservableValue<boolean>;\n  private createDocument: (source: DocumentSource, options: IDocumentOptions) => T;\n  private onSnapshotUnsubscribe?: () => void;\n  private observedRefCount: number;\n  private isVerbose: boolean;\n  private debugInstanceName?: string;\n  private isMinimizingUpdates: boolean;\n  private initialLocalSnapshotDetectTime?: number;\n  private initialLocalSnapshotDebounceTime?: number;\n  private readyPromise?: Promise<null>;\n  private readyResolveFn?: (value: PromiseLike<null> | null) => void;\n  private initialLocalSnapshotStartTime?: number;\n  private initialLocalSnapshotDebounceTimer?: any;\n  private ctx?: IContext;\n  // private _limit: any;\n  // private _cursor: any;\n\n  constructor(source?: CollectionSource, options: ICollectionOptions<T> = {}) {\n    const {\n      query,\n      createDocument,\n      mode,\n      // limit,\n      debug,\n      debugName,\n      minimizeUpdates = false,\n      initialLocalSnapshotDetectTime = 50,\n      initialLocalSnapshotDebounceTime = 1000,\n      context,\n    } = options;\n    this.isVerbose = debug || false;\n    this.debugInstanceName = debugName;\n    this.isMinimizingUpdates = minimizeUpdates;\n    this.initialLocalSnapshotDetectTime = initialLocalSnapshotDetectTime;\n    this.initialLocalSnapshotDebounceTime = initialLocalSnapshotDebounceTime;\n    this.docLookup = {};\n    this.observedRefCount = 0;\n    this.sourceInput = source;\n    this.refObservable = observable.box(undefined);\n    this.queryInput = query;\n    this.queryRefObservable = observable.box(undefined);\n    // this._limit = observable.box(limit || undefined);\n    // this._cursor = observable.box(undefined);\n    this.modeObservable = observable.box(verifyMode(mode || Mode.Auto));\n    this.isLoadingObservable = observable.box(false);\n    this.isLoadedObservable = observable.box(false);\n    this.hasDocsObservable = enhancedObservable(false, this);\n    this.docsObservable = enhancedObservable([], this);\n    this.ctx = context;\n\n    if (createDocument) {\n      this.createDocument = createDocument;\n    } else {\n      this.createDocument = (docSource: DocumentSource, docOptions: IDocumentOptions): T =>\n        new Document(docSource, docOptions) as unknown as T;\n    }\n\n    runInAction(() => this._updateRealtimeUpdates(true, true));\n  }\n\n  /**\n   * Array of all the documents that have been fetched\n   * from firestore.\n   *\n   * @type {Array}\n   *\n   * @example\n   * collection.docs.forEach((doc) => {\n   *   console.log(doc.data);\n   * });\n   */\n  public get docs(): T[] {\n    return this.docsObservable;\n  }\n\n  /**\n   * True whenever the docs array is not empty.\n   *\n   * @type {boolean}\n   */\n  public get hasDocs(): boolean {\n    return this.hasDocsObservable.get();\n  }\n\n  /**\n   * Firestore collection reference.\n   *\n   * Use this property to get or set the collection\n   * reference. When set, a fetch to the new collection\n   * is performed.\n   *\n   * Alternatively, you can also use `path` to change the\n   * reference in more a readable way.\n   *\n   * @type {firestore.CollectionReference | Function}\n   *\n   * @example\n   * const col = new Collection(firebase.firestore().collection('albums/splinter/tracks'));\n   * ...\n   * // Switch to another collection\n   * col.ref = firebase.firestore().collection('albums/americana/tracks');\n   */\n  public get ref(): CollectionReference | undefined {\n    let ref = this.refObservable.get();\n    if (!this.refDisposerFn) {\n      ref = this._resolveRef(this.sourceInput);\n    }\n    return ref;\n  }\n  public set ref(ref: CollectionReference | undefined) {\n    this.source = ref;\n  }\n\n  /**\n   * Id of the Firestore collection (e.g. 'tracks').\n   *\n   * To get the full-path of the collection, use `path`.\n   *\n   * @type {string}\n   */\n  public get id(): string | undefined {\n    const ref = this.ref;\n    return ref ? ref.id : undefined;\n  }\n\n  /**\n   * Path of the collection (e.g. 'albums/blackAlbum/tracks').\n   *\n   * Use this property to switch to another collection in\n   * the back-end. Effectively, it is a more compact\n   * and readable way of setting a new ref.\n   *\n   * @type {string | Function}\n   *\n   * @example\n   * const col = new Collection('artists/Metallica/albums');\n   * ...\n   * // Switch to another collection in the back-end\n   * col.path = 'artists/EaglesOfDeathMetal/albums';\n   */\n  public get path(): string | undefined {\n    let ref: any = this.ref;\n    if (!ref) {\n      return undefined;\n    }\n    let path = ref.id;\n    while (ref.parent) {\n      path = ref.parent.id + '/' + path;\n      ref = ref.parent;\n    }\n    return path;\n  }\n  public set path(collectionPath: string | undefined) {\n    this.source = collectionPath;\n  }\n\n  /**\n   * @private\n   */\n  public get source(): CollectionSource | undefined {\n    return this.sourceInput;\n  }\n  public set source(source: CollectionSource | undefined) {\n    if (this.sourceInput === source) {\n      return;\n    }\n    runInAction(() => {\n      this.sourceInput = source;\n\n      // Stop any reactions\n      if (this.refDisposerFn) {\n        this.refDisposerFn();\n        this.refDisposerFn = undefined;\n      }\n\n      // Update real-time updating\n      this._updateRealtimeUpdates(true);\n    });\n  }\n\n  /**\n   * Use this property to set any order-by, where,\n   * limit or start/end criteria. When set, that query\n   * is used to retrieve any data. When cleared (`undefined`),\n   * the collection reference is used.\n   *\n   * The query can be a Function of the form\n   * `(firestore.CollectionReference) => firestore.Query | null | undefined`.\n   * Where returning `null` will result in an empty collection,\n   * and returning `undefined` will revert to using the collection\n   * reference (the entire collection).\n   *\n   * If the query function makes use of any observable values then\n   * it will be re-run when those values change.\n   *\n   * query can be set to a direct Firestore `Query` object but this\n   * is an uncommon usage.\n   *\n   * @type {firestore.Query | Function}\n   *\n   * @example\n   * const todos = new Collection('todos');\n   *\n   * // Sort the collection\n   * todos.query = (ref) => ref.orderBy('text', 'asc');\n   *\n   * // Order, filter & limit\n   * todos.query = (ref) => ref.where('finished', '==', false).orderBy('finished', 'asc').limit(20);\n   *\n   * // React to changes in observable and force empty collection when required\n   * todos.query = (ref) => authStore.uid ? ref.where('owner', '==', authStore.uid) : null;\n   *\n   * // Clear the query, will cause whole collection to be fetched\n   * todos.query = undefined;\n   */\n  public get query(): CollectionQuery | undefined {\n    return this.queryInput;\n  }\n  public set query(query: CollectionQuery | undefined) {\n    if (this.queryInput === query) {\n      return;\n    }\n    runInAction(() => {\n      this.queryInput = query;\n\n      // Stop any reactions\n      if (this.refDisposerFn) {\n        this.refDisposerFn();\n        this.refDisposerFn = undefined;\n      }\n\n      // Update real-time updating\n      this._updateRealtimeUpdates(undefined, true);\n    });\n  }\n\n  /**\n   * @private\n   * firestore.Query -> a valid query exists, use that\n   * null -> the query function returned `null` to disable the collection\n   * undefined -> no query defined, use collection ref instead\n   */\n  public get queryRef(): Query | null | undefined {\n    return this.queryRefObservable.get();\n  }\n\n  /**\n   * Real-time updating mode.\n   *\n   * Can be set to any of the following values:\n   * - \"auto\" (enables real-time updating when the collection is observed)\n   * - \"off\" (no real-time updating, you need to call fetch explicitly)\n   * - \"on\" (real-time updating is permanently enabled)\n   *\n   * @type {string}\n   */\n  public get mode(): Mode {\n    return this.modeObservable.get();\n  }\n  public set mode(mode: Mode) {\n    if (this.modeObservable.get() === mode) {\n      return;\n    }\n    verifyMode(mode);\n    runInAction(() => {\n      this.modeObservable.set(mode);\n      this._updateRealtimeUpdates();\n    });\n  }\n\n  /**\n   * Returns true when the Collection is actively listening\n   * for changes in the firestore back-end.\n   *\n   * @type {boolean}\n   */\n  public get isActive(): boolean {\n    return !!this.onSnapshotUnsubscribe;\n  }\n\n  /**\n   * Fetches new data from firestore. Use this to manually fetch\n   * new data when `mode` is set to 'off'.\n   *\n   * @return {Promise}\n   * @fulfil {Collection} - This collection\n   * @reject {Error} - Error describing the cause of the problem\n   *\n   * @example\n   * const col = new Collection('albums', 'off');\n   * col.fetch().then(({docs}) => {\n   *   docs.forEach(doc => console.log(doc));\n   * });\n   */\n  public async fetch(): Promise<Collection<T>> {\n    if (this.isVerbose) {\n      console.debug(`${this.debugName} - fetching...`);\n    }\n    if (this.isActive) {\n      throw new Error('Should not call fetch when real-time updating is active');\n    }\n    if (this.isLoadingObservable.get()) {\n      throw new Error('Fetch already in progress');\n    }\n    const colRef = this._resolveRef(this.sourceInput);\n    const queryRef = this._resolveQuery(colRef!, this.queryInput);\n    const ref = queryRef !== undefined ? queryRef : colRef;\n    if (!ref) {\n      throw new Error('No ref, path or query set on Collection');\n    }\n    runInAction(() => {\n      this._ready(false);\n      this.isLoadingObservable.set(true);\n    });\n    try {\n      const snapshot = await getContext(this).getDocs(ref);\n      runInAction(() => {\n        this.isLoadingObservable.set(false);\n        this._updateFromSnapshot(snapshot);\n        if (this.isVerbose) {\n          console.debug(`${this.debugName} - fetched ${snapshot.docs.length} documents`);\n        }\n      });\n      this._ready(true);\n      return this;\n    } catch (err) {\n      console.log(`${this.debugName} - fetch failed: ${(err as Error).message}`);\n      runInAction(() => {\n        this.isLoadingObservable.set(false);\n        this._updateFromSnapshot(undefined);\n        this._ready(true);\n      });\n      throw err;\n    }\n  }\n\n  /**\n   * True when new data is being loaded.\n   *\n   * Fetches are performed in these cases:\n   *\n   * - When real-time updating is started\n   * - When a different `ref` or `path` is set\n   * - When a `query` is set or cleared\n   * - When `fetch` is explicitly called\n   *\n   * @type {boolean}\n   *\n   * @example\n   * const col = new Collection('albums', {mode: 'off'});\n   * console.log(col.isLoading);  // false\n   * col.fetch();                 // start fetch\n   * console.log(col.isLoading);  // true\n   * await col.ready();           // wait for fetch to complete\n   * console.log(col.isLoading);  // false\n   *\n   * @example\n   * const col = new Collection('albums');\n   * console.log(col.isLoading);  // false\n   * const dispose = autorun(() => {\n   *   console.log(col.docs);     // start observing collection data\n   * });\n   * console.log(col.isLoading);  // true\n   * ...\n   * dispose();                   // stop observing collection data\n   * console.log(col.isLoading);  // false\n   */\n  public get isLoading(): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions, @babel/no-unused-expressions\n    this.docsObservable.length;\n    return this.isLoadingObservable.get();\n  }\n\n  /**\n   * True when a query snapshot has been retrieved at least once.\n   * This however does not mean that any documents have been retrieved,\n   * as the number of returned document may have been 0.\n   * Use `hasDocs` to check whether any documents have been retrieved.\n   *\n   * @type {boolean}\n   */\n  public get isLoaded(): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions, @babel/no-unused-expressions\n    this.docsObservable.length;\n    return this.isLoadedObservable.get();\n  }\n\n  /**\n   * Promise that is resolved when the Collection has\n   * finished fetching its (initial) documents.\n   *\n   * Use this method to for instance wait for\n   * the initial snapshot update to complete, or to wait\n   * for fresh data after changing the path/ref.\n   *\n   * @return {Promise}\n   *\n   * @example\n   * const col = new Collection('albums', {mode: 'on'});\n   * await col.ready();\n   * console.log('albums: ', col.docs);\n   *\n   * @example\n   * const col = new Collection('artists/FooFighters/albums', {mode: 'on'});\n   * await col.ready();\n   * ...\n   * // Changing the path causes a new snapshot update\n   * col.path = 'artists/TheOffspring/albums';\n   * await col.ready();\n   * console.log('albums: ', col.docs);\n   */\n  public ready(): Promise<null> {\n    this.readyPromise = this.readyPromise || Promise.resolve(null);\n    return this.readyPromise;\n  }\n\n  /**\n   * Add a new document to this collection with the specified\n   * data, assigning it a document ID automatically.\n   *\n   * @param {Object} data - JSON data for the new document\n   * @return {Promise}\n   * @fulfil {Document} - The newly created document\n   * @reject {Error} - Error, e.g. a schema validation error or Firestore error\n   *\n   * @example\n   * const doc = await collection.add({\n   *   finished: false,\n   *   text: 'New todo',\n   *   options: {\n   *     highPrio: true\n   *   }\n   * });\n   * console.log(doc.id); // print id of new document\n   *\n   * @example\n   * // If you want to create a document with a custom Id, then\n   * // use the Document class instead, like this\n   * const docWithCustomId = new Document('todos/mytodoid');\n   * await docWithCustomId.set({\n   *   finished: false,\n   *   text: 'New todo',\n   * });\n   */\n  public async add(data: any): Promise<T> {\n    const ref = this.ref;\n    if (!ref) {\n      throw new Error('No valid collection reference');\n    }\n\n    // REVISIT: can we know to skip this if schemas not in use?\n    // Validate schema using a dummy snapshot\n    this.createDocument(undefined, {\n      context: this.context,\n      snapshot: {\n        data: () => data,\n        exists: () => true,\n        get: (fieldPath: string) => data[fieldPath],\n        id: '',\n        // @ts-ignore Type 'undefined' is not assignable to type 'SnapshotMetadata'\n        metadata: undefined,\n        // @ts-ignore Type 'undefined' is not assignable to type 'DocumentReference<DocumentData>'\n        ref: undefined,\n      },\n    });\n\n    // Add to firestore\n    const { addDoc, getDoc } = getContext(this);\n    const ref2 = await addDoc(ref, data);\n    const snapshot = await getDoc(ref2);\n    return this.createDocument(snapshot.ref, {\n      context: this.context,\n      snapshot,\n    });\n  }\n\n  /**\n   * Deletes all the documents in the collection or query.\n   * @ignore\n   * TODO - Not implemented yet\n   */\n  public async deleteAll(): Promise<void> {\n    const ref = this.ref;\n    if (!ref) {\n      throw new Error('No valid collection reference');\n    }\n    // TODO\n  }\n\n  public toString(): string {\n    return this.debugName;\n  }\n\n  /**\n   * @private\n   */\n  public get debugName(): string {\n    return `${this.debugInstanceName || this.constructor.name} (${this.path})`;\n  }\n\n  /**\n   * @private\n   */\n  public get context(): IContext | undefined{\n    return this.ctx;\n  }\n\n  /**\n   * Limit used for query pagination.\n   */\n  /* get limit(): ?number {\n\t\treturn this._limit.get();\n\t}\n\tset limit(val: ?number) {\n\t\tthis._limit.set(val || undefined);\n\t} */\n\n  /**\n   * Paginates to the start of the collection,\n   * resetting any pagination cursor that exists.\n   */\n  /* paginateToStart() {\n\t\tthis._cursor.set(undefined);\n\t} */\n\n  /**\n   * Paginates to the next page. This sets the cursor\n   * to `startAfter` the last document.\n   *\n   * @return {Boolean} False in case pagination was not possible\n   */\n  /* paginateNext(): boolean {\n\t\tif (!this.canPaginateNext) return false;\n\t\tthis._cursor.set({\n\t\t\ttype: 'startAfter',\n\t\t\tvalue: this.docs[this.docs.length - 1].ref\n\t\t});\n\t\treturn true;\n\t} */\n\n  /**\n   * Paginates to the previous page. This sets the cursor\n   * to `endBefore` the first document in `docs`.\n   *\n   * @return {Boolean} False in case pagination was not possible\n   */\n  /* paginatePrevious(): boolean {\n\t\tif (!this.canPaginatePrevious) return false;\n\t\tif (!this.docs.length) {\n\t\t\tthis._cursor.set(undefined);\n\t\t\treturn true;\n\t\t}\n\t\tthis._cursor.set({\n\t\t\ttype: 'endBefore',\n\t\t\tvalue: this.docs[0].ref\n\t\t});\n\t\treturn true;\n\t}\n\n\tget canPaginateNext(): boolean {\n\t\tif (!this.limit) return false;\n\t\treturn this.docs.length >= this.limit;\n\t}\n\n\tget canPaginatePrevious(): boolean {\n\t\tif (!this.limit) return false;\n\t\treturn this._cursor.get() ? true : false;\n\t} */\n\n  /**\n   * Called whenever a property of this class becomes observed.\n   * @private\n   */\n  public addObserverRef(): number {\n    if (this.isVerbose) {\n      console.debug(`${this.debugName} - addRef (${this.observedRefCount + 1})`);\n    }\n    const res = ++this.observedRefCount;\n    if (res === 1) {\n      runInAction(() => this._updateRealtimeUpdates());\n    }\n    return res;\n  }\n\n  /**\n   * Called whenever a property of this class becomes un-observed.\n   * @private\n   */\n  public releaseObserverRef(): number {\n    if (this.isVerbose) {\n      console.debug(`${this.debugName} - releaseRef (${this.observedRefCount - 1})`);\n    }\n    const res = --this.observedRefCount;\n    if (!res) {\n      runInAction(() => this._updateRealtimeUpdates());\n    }\n    return res;\n  }\n\n  protected _ready(complete: boolean) {\n    if (complete) {\n      const readyResolve = this.readyResolveFn;\n      if (readyResolve) {\n        this.readyResolveFn = undefined;\n        readyResolve(null);\n      }\n    } else if (!this.readyResolveFn) {\n      this.readyPromise = new Promise((resolve) => {\n        this.readyResolveFn = resolve;\n      });\n    }\n  }\n\n  protected _resolveRef(source?: CollectionSource): CollectionReference | undefined{\n    if (this.sourceCache === source) {\n      return this.sourceCacheRef;\n    }\n    let ref;\n    if (typeof source === 'string') {\n      ref = getContext(this).collection(source);\n    } else if (typeof source === 'function') {\n      ref = this._resolveRef(source());\n      return ref; // don't set cache in this case\n    } else {\n      ref = source;\n    }\n    this.sourceCache = source;\n    this.sourceCacheRef = ref;\n    return ref;\n  }\n\n  protected _resolveQuery(\n    collectionRef: CollectionReference,\n    query?: CollectionQuery\n  ): Query | null | undefined {\n    let ref: any = query;\n    if (typeof query === 'function') {\n      ref = query(collectionRef);\n    }\n\n    // Apply pagination cursor\n    /* const cursor = this._cursor.get();\n\t\tif (cursor) {\n\t\t\tref = ref || collectionRef;\n\t\t\tswitch (cursor.type) {\n\t\t\t\tcase 'startAfter': ref = ref.startAfter(cursor.value); break;\n\t\t\t\tcase 'startAt': ref = ref.startAt(cursor.value); break;\n\t\t\t\tcase 'endBefore': ref = ref.endBefore(cursor.value); break;\n\t\t\t\tcase 'endAt': ref = ref.endAt(cursor.value); break;\n\t\t\t}\n\t\t}\n\n\t\t// Apply fetch limit\n\t\tconst limit = this.limit;\n\t\tif (limit) {\n\t\t\tref = ref || collectionRef;\n\t\t\tref = ref.limit(limit);\n\t\t} */\n    return ref;\n  }\n\n  /**\n   * @private\n   */\n  protected _onSnapshot(snapshot: QuerySnapshot): void {\n    // Firestore sometimes returns multiple snapshots initially.\n    // The first one containing cached results, followed by a second\n    // snapshot which was fetched from the cloud.\n    if (this.initialLocalSnapshotDebounceTimer) {\n      clearTimeout(this.initialLocalSnapshotDebounceTimer);\n      this.initialLocalSnapshotDebounceTimer = undefined;\n      if (this.isVerbose) {\n        console.debug(\n          `${this.debugName} - cancelling initial debounced snapshot, because a newer snapshot has been received`\n        );\n      }\n    }\n    if (this.isMinimizingUpdates) {\n      const timeElapsed = Date.now() - (this.initialLocalSnapshotStartTime ?? 0);\n      this.initialLocalSnapshotStartTime = 0;\n      if (timeElapsed >= 0 && timeElapsed < (this.initialLocalSnapshotDetectTime ?? 0)) {\n        if (this.isVerbose) {\n          console.debug(\n            `${this.debugName} - local snapshot detected (${timeElapsed}ms < ${this.initialLocalSnapshotDetectTime}ms threshold), debouncing ${this.initialLocalSnapshotDebounceTime} msec...`\n          );\n        }\n        this.initialLocalSnapshotDebounceTimer = setTimeout(() => {\n          this.initialLocalSnapshotDebounceTimer = undefined;\n          this._onSnapshot(snapshot);\n        }, this.initialLocalSnapshotDebounceTime);\n        return;\n      }\n    }\n\n    // Process snapshot\n    runInAction(() => {\n      if (this.isVerbose) {\n        console.debug(`${this.debugName} - onSnapshot`);\n      }\n      this.isLoadingObservable.set(false);\n      this._updateFromSnapshot(snapshot);\n      this._ready(true);\n    });\n  }\n\n  /**\n   * @private\n   */\n  protected _onSnapshotError(error: Error): void {\n    console.warn(`${this.debugName} - onSnapshotError: ${error.message}`);\n  }\n\n  /**\n   * @private\n   */\n  private _updateFromSnapshot(snapshot?: QuerySnapshot): void {\n    const newDocs: T[] = [];\n    if (snapshot) {\n      snapshot.docs.forEach((docSnapshot: DocumentSnapshot) => {\n        let doc = this.docLookup[docSnapshot.id];\n        try {\n          if (doc) {\n            doc.updateFromCollectionSnapshot(docSnapshot);\n          } else {\n            doc = this.createDocument(docSnapshot.ref, {\n              context: this.context,\n              snapshot: docSnapshot,\n            });\n            this.docLookup[doc.id!] = doc;\n          }\n          doc.addCollectionRef();\n          newDocs.push(doc);\n        } catch (err) {\n          console.error((err as Error).message);\n        }\n      });\n    }\n    this.docsObservable.forEach((doc) => {\n      if (!doc.releaseCollectionRef()) {\n        delete this.docLookup[doc.id || ''];\n      }\n    });\n\n    this.hasDocsObservable.set(!!newDocs.length);\n    this.isLoadedObservable.set(true);\n    if (this.docsObservable.length !== newDocs.length) {\n      this.docsObservable.replace(newDocs);\n    } else {\n      for (let i = 0, n = newDocs.length; i < n; i++) {\n        if (newDocs[i] !== this.docsObservable[i]) {\n          this.docsObservable.replace(newDocs);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  private _updateRealtimeUpdates(updateSourceRef?: boolean, updateQueryRef?: boolean): void {\n    let newActive = false;\n    const active = !!this.onSnapshotUnsubscribe;\n    switch (this.modeObservable.get()) {\n      case Mode.Auto:\n        newActive = !!this.observedRefCount;\n        break;\n      case Mode.Off:\n        newActive = false;\n        break;\n      case Mode.On:\n        newActive = true;\n        break;\n    }\n\n    // Update source & query ref if needed\n    if (newActive && !active) {\n      updateSourceRef = true;\n      updateQueryRef = true;\n    }\n    if (updateSourceRef) {\n      this.refObservable.set(this._resolveRef(this.sourceInput));\n    }\n    if (updateQueryRef) {\n      this.queryRefObservable.set(this._resolveQuery(this.refObservable.get()!, this.queryInput));\n    }\n\n    // Upon de-activation, stop any observed reactions or\n    // snapshot listeners.\n    if (!newActive) {\n      if (this.refDisposerFn) {\n        this.refDisposerFn();\n        this.refDisposerFn = undefined;\n      }\n      this.onSnapshotRefCache = undefined;\n      if (this.onSnapshotUnsubscribe) {\n        if (this.isVerbose) {\n          console.debug(\n            `${this.debugName} - stop (${this.modeObservable.get()}:${this.observedRefCount})`\n          );\n        }\n        this.onSnapshotUnsubscribe();\n        this.onSnapshotUnsubscribe = undefined;\n        if (this.isLoadingObservable.get()) {\n          this.isLoadingObservable.set(false);\n        }\n        this._ready(true);\n      }\n      return;\n    }\n\n    // Start listening for ref-changes\n    if (!this.refDisposerFn) {\n      let initialSourceRef = this.refObservable.get();\n      let initialQueryRef = this.queryRefObservable.get();\n      this.refDisposerFn = reaction(\n        () => {\n          let sourceRef = this._resolveRef(this.sourceInput);\n          let queryRef2 = this._resolveQuery(sourceRef!, this.queryInput);\n          if (initialSourceRef) {\n            sourceRef = initialSourceRef;\n            queryRef2 = initialQueryRef;\n            initialSourceRef = undefined;\n            initialQueryRef = undefined;\n          }\n          return {\n            queryRef2,\n            sourceRef,\n          };\n        },\n        ({ sourceRef, queryRef2 }) => {\n          runInAction(() => {\n            if (\n              this.refObservable.get() !== sourceRef ||\n              this.queryRefObservable.get() !== queryRef2\n            ) {\n              this.refObservable.set(sourceRef);\n              this.queryRefObservable.set(queryRef2);\n              this._updateRealtimeUpdates();\n            }\n          });\n        }\n      );\n    }\n\n    // Resolve ref and check whether it has changed\n    const queryRef = this.queryRefObservable.get();\n    const ref = queryRef !== undefined ? queryRef : this.refObservable.get();\n    if (this.onSnapshotRefCache === ref) {\n      return;\n    }\n    this.onSnapshotRefCache = ref;\n\n    // Stop any existing listener\n    if (this.onSnapshotUnsubscribe) {\n      this.onSnapshotUnsubscribe();\n      this.onSnapshotUnsubscribe = undefined;\n    }\n\n    // If no valid ref exists, then clear the collection so no \"old\"\n    // documents are visible.\n    if (!ref) {\n      if (this.docsObservable.length) {\n        this._updateFromSnapshot({\n          docChanges: (options?: SnapshotListenOptions) => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions, @babel/no-unused-expressions\n            options;\n            return [];\n          },\n          docs: [],\n          empty: true,\n          forEach: () => true,\n          // @ts-ignore Type 'undefined' is not assignable to type 'SnapshotMetadata'\n          metadata: undefined,\n          query: queryRef!,\n          size: 0,\n        });\n      }\n      return;\n    }\n\n    // Start listener\n    if (this.isVerbose) {\n      console.debug(\n        `${this.debugName} - ${active ? 're-' : ''}start (${this.modeObservable.get()}:${\n          this.observedRefCount\n        })`\n      );\n    }\n    this._ready(false);\n    this.isLoadingObservable.set(true);\n    this.initialLocalSnapshotStartTime = Date.now();\n    this.onSnapshotUnsubscribe = getContext(this).onSnapshot(\n      ref,\n      (snapshot) => this._onSnapshot(snapshot),\n      (err) => this._onSnapshotError(err)\n    );\n  }\n}\n\nexport default Collection;\n","import type { CollectionReference, Query } from 'firebase/firestore';\nimport { runInAction, autorun, computed, makeObservable, IObservableArray } from 'mobx';\n\nimport Collection from './Collection';\nimport Document from './Document';\nimport {\n  ICollection,\n  DocumentSource,\n  IDocumentOptions,\n  CollectionSource,\n  ICollectionDocument,\n  IEnhancedObservableDelegate,\n  IContext, IHasContext\n} from './Types';\nimport { isEqual } from './Utils';\nimport { enhancedObservable } from './enhancedObservable';\n\nexport type AggregateCollectionOrderBy<T> = (a: T, b: T) => number;\nexport type AggregateCollectionFilterBy<T> = (doc: T) => boolean;\nexport interface IAggregateCollectionQuery {\n  key: string;\n  query: (ref: CollectionReference) => Query | null | undefined;\n}\nexport type AggregateCollectionQueries<Y> = Y[] | null;\nexport type AggregateCollectionQueriesFn<Y extends IAggregateCollectionQuery> =\n  () => AggregateCollectionQueries<Y>;\n\nexport interface IAggregateCollectionOptions<T, Y extends IAggregateCollectionQuery> {\n  queries: AggregateCollectionQueriesFn<Y>;\n  createDocument?: (source: DocumentSource, options: IDocumentOptions) => T;\n  debug?: boolean;\n  debugName?: string;\n  orderBy?: AggregateCollectionOrderBy<T>;\n  filterBy?: AggregateCollectionFilterBy<T>;\n  context?: IContext;\n}\n\n/**\n * Collection that aggregates documents from multiple queries into\n * a single, easy accessible collection.\n *\n * AggregateCollection is driven by the `queries` function, which defines what\n * queries should be executed on the Firestore cloud back-end. GeoQuery is\n * for instance a more specific use-case of a aggregated-collection using a range\n * of geo-hash queries.\n *\n * @param {CollectionSource} [source] String-path, ref or function that returns a path or ref\n * @param {Object} [options] Configuration options\n * @param {AggregateCollectionQueriesFn} [options.queries] See `AggregateCollection.queries`\n * @param {Function} [options.createDocument] Factory function for creating documents `(source, options) => new Document(source, options)`\n * @param {Function} [options.orderBy] Client side sort function\n * @param {Function} [options.filterBy] Client side filter function\n * @param {boolean} [options.debug] Enables debug logging\n * @param {String} [options.debugName] Name to use when debug logging is enabled\n *\n * @example\n * import {AggregateCollection} from 'firestorter';\n *\n * // Query all unfinished todos for a set of users\n * const userIds = ['pinky', 'brain'];\n * const col = new AggregateCollection('todos', {\n *   queries: () => userIds.map(userId => ({\n *     key: userId, // unique-key by which the query is re-used/cached\n *     query: (ref) => ref.where('userId', '==', userId).where('finished', '==', false)\n *   }))\n * });\n */\nclass AggregateCollection<\n  T extends ICollectionDocument,\n  Y extends IAggregateCollectionQuery = IAggregateCollectionQuery\n> implements ICollection<T>, IEnhancedObservableDelegate, IHasContext\n{\n  private queriesFn: AggregateCollectionQueriesFn<Y>;\n  private collectionSource: CollectionSource;\n  private createDocument: (source: DocumentSource, options: IDocumentOptions) => T;\n  private orderBy?: AggregateCollectionOrderBy<T>;\n  private filterBy?: AggregateCollectionFilterBy<T>;\n  private debug: boolean;\n  private debugInstanceName?: string;\n  private observedRefCount: number = 0;\n  private disposer?: (() => any);\n  private collections: IObservableArray<Collection<T>>;\n  private prevCollections: Collection<T>[];\n  private collectionRecycleMap: {\n    [key: string]: Collection<T>;\n  };\n  private documentRecycleMap: {\n    [key: string]: T;\n  };\n  private ctx?: IContext;\n\n  constructor(source: CollectionSource, options: IAggregateCollectionOptions<T, Y>) {\n    makeObservable(this, {\n      docs: computed,\n    });\n\n    this.collectionSource = source;\n    if (options.createDocument) {\n      this.createDocument = options.createDocument;\n    } else {\n      this.createDocument = (docSource: DocumentSource, docOptions: IDocumentOptions): T =>\n        new Document(docSource, docOptions) as unknown as T;\n    }\n    this.queriesFn = options.queries;\n    this.orderBy = options.orderBy;\n    this.filterBy = options.filterBy;\n    this.debug = options.debug || false;\n    this.debugInstanceName = options.debugName;\n    this.collections = enhancedObservable([], this);\n    this.prevCollections = [];\n    this.collectionRecycleMap = {};\n    this.documentRecycleMap = {};\n    this.ctx = options.context;\n  }\n\n  /**\n   * Array of all the documents that have been fetched\n   * from firestore.\n   *\n   * @type {Array}\n   *\n   * @example\n   * aggregateCollection.docs.forEach((doc) => {\n   *   console.log(doc.data);\n   * });\n   */\n  public get docs(): T[] {\n    let docs: T[] = [];\n\n    // Aggregrate all docs from the queries\n    let hasAllData = true;\n    this.collections.forEach((col) => {\n      if (col.isLoading) {\n        hasAllData = false;\n      }\n      col.docs.forEach((doc) => docs.push(doc));\n    });\n\n    // If new queries have been added but have not yet\n    // completed loading, use the previous queries instead\n    // (until) all data has loaded\n    if (!hasAllData && this.prevCollections.length) {\n      // console.log('usingPrevQueries');\n      docs = [];\n      this.prevCollections.forEach((col) => {\n        col.docs.forEach((doc) => docs.push(doc));\n      });\n    } else if (hasAllData) {\n      // console.log('+++ ALL DATA AVAIL');\n      this.prevCollections = this.collections.slice(0);\n    }\n\n    // console.log('unfilteredDocs: ', docs.length);\n    if (this.filterBy) {\n      docs = docs.filter(this.filterBy);\n    }\n    if (this.orderBy) {\n      docs.sort(this.orderBy);\n    }\n    // console.log('docs: ', docs.length);\n    return docs;\n  }\n\n  /**\n   * True whenever any documents have been fetched.\n   *\n   * @type {boolean}\n   */\n  public get hasDocs(): boolean {\n    return this.docs.length > 0;\n  }\n\n  /**\n   * Array of all the collections inside this aggregate\n   * collection.\n   *\n   * @type {Array}\n   *\n   * @example\n   * aggregateCollection.cols.forEach((col) => {\n   *   console.log(col.docs.length);\n   * });\n   */\n  public get cols(): Collection<T>[] {\n    return this.collections;\n  }\n\n  /**\n   * Queries function.\n   *\n   * @type {Function}\n   */\n  public get queries(): AggregateCollectionQueriesFn<Y> {\n    return this.queriesFn;\n  }\n\n  /**\n   * True when new data is being loaded.\n   *\n   * @type {boolean}\n   */\n  public get isLoading(): boolean {\n    return this.collections.reduce((acc, col) => acc || col.isLoading, false) as any;\n  }\n\n  /**\n   * True when data for all underlying collections has been loaded.\n   *\n   * @type {boolean}\n   */\n  public get isLoaded(): boolean {\n    return this.collections.reduce((acc, col) => (acc ? col.isLoaded : false), true) as any;\n  }\n\n  /**\n   * @private\n   */\n  public get debugName(): string {\n    return `${this.debugInstanceName || this.constructor.name}`;\n  }\n\n  public toString(): string {\n    return this.debugName;\n  }\n\n  /**\n   * @private\n   */\n  public get context(): IContext | undefined {\n    return this.ctx;\n  }\n\n  /**\n   * Called whenever a property of this class becomes observed.\n   * @private\n   */\n  public addObserverRef(): number {\n    const res = ++this.observedRefCount;\n    if (res === 1) {\n      this.disposer = autorun(() => {\n        const queries = this.queriesFn();\n        runInAction(() => this._updateQueries(queries));\n      });\n    }\n    return res;\n  }\n\n  /**\n   * Called whenever a property of this class becomes un-observed.\n   * @private\n   */\n  public releaseObserverRef(): number {\n    const res = --this.observedRefCount;\n    if (res <= 0) {\n      if (this.disposer) {\n        this.disposer();\n        this.disposer = undefined;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * @private\n   */\n  private _onCreateDocument = (source: DocumentSource, options: IDocumentOptions) => {\n    if (!source) {\n      return this.createDocument(source, options);\n    }\n    // @ts-ignore\n    const doc = source.id ? this.documentRecycleMap[source.id] : null;\n    return doc || this.createDocument(source, options);\n  };\n\n  /**\n   * @private\n   */\n  private _updateQueries(queries: AggregateCollectionQueries<Y>) {\n    if (!queries) {\n      return;\n    }\n    if (this.debug) {\n      console.debug(this.debugName, 'updateQueries: ', queries);\n    }\n\n    // Copy all current documents into the document recyle map\n    this.documentRecycleMap = {};\n    Object.values(this.collectionRecycleMap).forEach((query) => {\n      query.docs.forEach((doc) => {\n        this.documentRecycleMap[doc.id!] = doc;\n      });\n    });\n    // console.log(Object.keys(this._documentRecycleMap));\n\n    const cols = queries.map((query) => {\n      let col = this.collectionRecycleMap[query.key];\n      if (!col) {\n        col = new Collection(this.collectionSource, {\n          createDocument: this._onCreateDocument,\n          debug: this.debug,\n          debugName: this.debugName + '.col: ' + query.key,\n          query: (ref) => (ref ? query.query(ref) : ref),\n        });\n      }\n      return col;\n    });\n\n    // Update the query recycle map\n    this.collectionRecycleMap = {};\n    cols.forEach((col, index) => {\n      const query = queries[index];\n      this.collectionRecycleMap[query.key] = col;\n    });\n\n    // Update the queries\n    if (!isEqual(cols, this.collections.slice(0))) {\n      this.collections.replace(cols);\n    }\n  }\n}\n\nexport default AggregateCollection;\n","// Taken from https://github.com/firebase/geofire-js/blob/master/src/utils.ts\n// And slightly modified to remove warnings and add the IGeoPoint type.\n\nexport interface IGeoPoint {\n  readonly latitude: number;\n  readonly longitude: number;\n}\n\nexport interface IGeoRegion extends IGeoPoint {\n  readonly latitudeDelta: number;\n  readonly longitudeDelta: number;\n}\n\nexport type GeoHash = string;\n\n// Default geohash length\nconst GEOHASH_PRECISION = 10;\n\n// Characters used in location geohashes\nconst BASE32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n\n// The meridional circumference of the earth in meters\nconst EARTH_MERI_CIRCUMFERENCE = 40007860;\n\n// Length of a degree latitude at the equator\nconst METERS_PER_DEGREE_LATITUDE = 110574;\n\n// Number of bits per geohash character\nconst BITS_PER_CHAR = 5;\n\n// Maximum length of a geohash in bits\nconst MAXIMUM_BITS_PRECISION = 22 * BITS_PER_CHAR;\n\n// Equatorial radius of the earth in meters\nconst EARTH_EQ_RADIUS = 6378137.0;\n\n// The following value assumes a polar radius of\n// const EARTH_POL_RADIUS = 6356752.3;\n// The formulate to calculate E2 is\n// E2 == (EARTH_EQ_RADIUS^2-EARTH_POL_RADIUS^2)/(EARTH_EQ_RADIUS^2)\n// The exact value is used here to avoid rounding errors\nconst E2 = 0.00669447819799;\n\n// Cutoff for rounding errors on double calculations\nconst EPSILON = 1e-12;\n\n/*\nfunction fromGeoPoint(point: IGeoPoint): number[] {\n\treturn [point.latitude, point.longitude];\n} */\n\nfunction toGeoPoint(location: number[]): IGeoPoint {\n  return {\n    latitude: location[0],\n    longitude: location[1],\n  };\n}\n\nfunction log2(x: number): number {\n  return Math.log(x) / Math.log(2);\n}\n\n/**\n * Validates the inputted location and throws an error if it is invalid.\n * @private\n * @param {object} location The {latitude, longitude} to be verified.\n */\nfunction validateLatitude(latitude: number): void {\n  if (typeof latitude !== 'number' || isNaN(latitude)) {\n    throw new Error('latitude must be a number');\n  } else if (latitude < -90 || latitude > 90) {\n    throw new Error('latitude must be within the range [-90, 90]');\n  }\n}\n\n/**\n * @private\n */\nfunction validateLongitude(longitude: number): void {\n  if (typeof longitude !== 'number' || isNaN(longitude)) {\n    throw new Error('longitude must be a number');\n  } else if (longitude < -180 || longitude > 180) {\n    throw new Error('longitude must be within the range [-180, 180]');\n  }\n}\n\n/**\n * @private\n */\nfunction validateLocation(location: IGeoPoint): void {\n  try {\n    if (!location) {\n      throw new Error('location is empty');\n    }\n    validateLatitude(location.latitude);\n    validateLongitude(location.longitude);\n  } catch (err) {\n    throw new Error(`Invalid location \"${location}\": ${(err as Error).message}`);\n  }\n}\n\n/**\n * @private\n */\nfunction validateRegion(region: IGeoRegion): void {\n  try {\n    if (!region) {\n      throw new Error('region is empty');\n    }\n    validateLatitude(region.latitude);\n    validateLatitude(region.latitudeDelta);\n    validateLongitude(region.longitude);\n    validateLongitude(region.longitudeDelta);\n  } catch (err) {\n    throw new Error(`Invalid region \"${region}\": ${(err as Error).message}`);\n  }\n}\n\n/**\n * Validates the inputted geohash and throws an error if it is invalid.\n * @private\n * @param {string} geohash The geohash to be validated.\n */\nfunction validateGeohash(geohash: string): void {\n  let error;\n\n  if (typeof geohash !== 'string') {\n    error = 'geohash must be a string';\n  } else if (geohash.length === 0) {\n    error = 'geohash cannot be the empty string';\n  } else {\n    for (const letter of geohash) {\n      if (BASE32.indexOf(letter) === -1) {\n        error = \"geohash cannot contain '\" + letter + \"'\";\n      }\n    }\n  }\n\n  if (typeof error !== 'undefined') {\n    throw new Error(\"Invalid geohash '\" + geohash + \"': \" + error);\n  }\n}\n\n/**\n * Converts a region into its geo points (nortEast, southWest, etc..).\n *\n * @param {IGeoRegion} region The region to convert\n */\nexport function geoRegionToPoints(\n  region: IGeoRegion\n): {\n  northEast: IGeoPoint;\n  northWest: IGeoPoint;\n  southEast: IGeoPoint;\n  southWest: IGeoPoint;\n} {\n  const north = region.latitude - region.latitudeDelta * 0.5;\n  const south = region.latitude + region.latitudeDelta * 0.5;\n  const east = wrapLongitude(region.longitude + region.longitudeDelta * 0.5);\n  const west = wrapLongitude(region.longitude - region.longitudeDelta * 0.5);\n  return {\n    northEast: { latitude: north, longitude: east },\n    northWest: { latitude: north, longitude: west },\n    southEast: { latitude: south, longitude: east },\n    southWest: { latitude: south, longitude: west },\n  };\n}\n\n/**\n * Converts degrees to radians.\n * @private\n * @param {number} degrees The number of degrees to be converted to radians.\n * @returns The number of radians equal to the inputted number of degrees.\n */\nfunction degreesToRadians(degrees: number): number {\n  if (typeof degrees !== 'number' || isNaN(degrees)) {\n    throw new Error('Error: degrees must be a number');\n  }\n\n  return (degrees * Math.PI) / 180;\n}\n\n/**\n * Encodes a geographical position (latitude/longitude) into a geohash tile.\n *\n * @param {object} location The {latitude, longitude} to encode into a geohash.\n * @param {number} [precision] The length of the geohash to create. If no precision is specified, the\n * default precision of `10` is used.\n * @returns The geohash of the inputted location.\n */\nexport function encodeGeohash(location: IGeoPoint, precision: number = GEOHASH_PRECISION): string {\n  validateLocation(location);\n  if (typeof precision !== 'undefined') {\n    if (typeof precision !== 'number' || isNaN(precision)) {\n      throw new Error('precision must be a number');\n    } else if (precision <= 0) {\n      throw new Error('precision must be greater than 0');\n    } else if (precision > 22) {\n      throw new Error('precision cannot be greater than 22');\n    } else if (Math.round(precision) !== precision) {\n      throw new Error('precision must be an integer');\n    }\n  }\n\n  const latitudeRange = {\n    max: 90,\n    min: -90,\n  };\n  const longitudeRange = {\n    max: 180,\n    min: -180,\n  };\n  let hash = '';\n  let hashVal = 0;\n  let bits = 0;\n  let even: number | boolean = 1;\n\n  while (hash.length < precision) {\n    const val = even ? location.longitude : location.latitude;\n    const range = even ? longitudeRange : latitudeRange;\n    const mid = (range.min + range.max) / 2;\n\n    if (val > mid) {\n      hashVal = (hashVal << 1) + 1;\n      range.min = mid;\n    } else {\n      hashVal = (hashVal << 1) + 0;\n      range.max = mid;\n    }\n\n    even = !even;\n    if (bits < 4) {\n      bits++;\n    } else {\n      bits = 0;\n      hash += BASE32[hashVal];\n      hashVal = 0;\n    }\n  }\n\n  return hash;\n}\n\n/**\n * Decodes a geohash tile into a geographical position (latitude/longitude).\n *\n * @param {string} geohash - Geohash tile\n */\nexport function decodeGeohash(geohash: string): IGeoPoint[] {\n  validateGeohash(geohash);\n\n  let evenBit = true;\n  let latMin = -90;\n  let latMax = 90;\n  let lonMin = -180;\n  let lonMax = 180;\n\n  for (let i = 0; i < geohash.length; i++) {\n    const chr = geohash.charAt(i);\n    const idx = BASE32.indexOf(chr);\n    if (idx < 0) {\n      throw new Error('Invalid geohash');\n    }\n\n    for (let n = 4; n >= 0; n--) {\n      const bitN = (idx >> n) & 1;\n      if (evenBit) {\n        // longitude\n        const lonMid = (lonMin + lonMax) / 2;\n        if (bitN === 1) {\n          lonMin = lonMid;\n        } else {\n          lonMax = lonMid;\n        }\n      } else {\n        // latitude\n        const latMid = (latMin + latMax) / 2;\n        if (bitN === 1) {\n          latMin = latMid;\n        } else {\n          latMax = latMid;\n        }\n      }\n      evenBit = !evenBit;\n    }\n  }\n\n  return [\n    { latitude: latMin, longitude: lonMin }, // sw\n    { latitude: latMax, longitude: lonMax }, // ne\n  ];\n}\n\n/**\n * Calculates the number of longitude degrees over a given distance and at a given latitude.\n *\n * @param {number} distance The distance to convert.\n * @param {number} latitude The latitude at which to calculate.\n * @returns The number of degrees the distance corresponds to.\n */\nexport function metersToLongitudeDegrees(distance: number, latitude: number): number {\n  const radians = degreesToRadians(latitude);\n  const num = (Math.cos(radians) * EARTH_EQ_RADIUS * Math.PI) / 180;\n  const denom = 1 / Math.sqrt(1 - E2 * Math.sin(radians) * Math.sin(radians));\n  const deltaDeg = num * denom;\n  if (deltaDeg < EPSILON) {\n    return distance > 0 ? 360 : 0;\n  } else {\n    return Math.min(360, distance / deltaDeg);\n  }\n}\n\n/**\n * Calculates the number of latitude degrees over a given distance.\n *\n * @param {number} distance The distance to convert.\n * @returns The number of degrees the distance corresponds to.\n */\nexport function metersToLatitudeDegrees(distance: number): number {\n  return distance / METERS_PER_DEGREE_LATITUDE;\n}\n\n/**\n * Calculates the bits necessary to reach a given resolution, in meters, for the longitude at a\n * given latitude.\n * @ignore\n * @param {number} resolution The desired resolution.\n * @param {number} latitude The latitude used in the conversion.\n * @return The bits necessary to reach a given resolution, in meters.\n */\nexport function longitudeBitsForResolution(resolution: number, latitude: number): number {\n  const degs = metersToLongitudeDegrees(resolution, latitude);\n  return Math.abs(degs) > 0.000001 ? Math.max(1, log2(360 / degs)) : 1;\n}\n\n/**\n * Calculates the bits necessary to reach a given resolution, in meters, for the latitude.\n * @ignore\n * @param {number} resolution The bits necessary to reach a given resolution, in meters.\n * @returns Bits necessary to reach a given resolution, in meters, for the latitude.\n */\nexport function latitudeBitsForResolution(resolution: number): number {\n  return Math.min(log2(EARTH_MERI_CIRCUMFERENCE / 2 / resolution), MAXIMUM_BITS_PRECISION);\n}\n\n/**\n * Wraps the longitude to [-180,180].\n * @private\n * @param {number} longitude The longitude to wrap.\n * @returns longitude The resulting longitude.\n */\nexport function wrapLongitude(longitude: number): number {\n  if (longitude <= 180 && longitude >= -180) {\n    return longitude;\n  }\n  const adjusted = longitude + 180;\n  if (adjusted > 0) {\n    return (adjusted % 360) - 180;\n  } else {\n    return 180 - (-adjusted % 360);\n  }\n}\n\n/**\n * Calculates the maximum number of bits of a geohash to get a bounding box that is larger than a\n * given size at the given coordinate.\n * @ignore\n * @param {object} coordinate The coordinate as a {latitude, longitude}.\n * @param {number} size The size of the bounding box.\n * @returns The number of bits necessary for the geohash.\n */\nfunction boundingBoxBits(coordinate: IGeoPoint, size: number): number {\n  const latDeltaDegrees = size / METERS_PER_DEGREE_LATITUDE;\n  const latitudeNorth = Math.min(90, coordinate.latitude + latDeltaDegrees);\n  const latitudeSouth = Math.max(-90, coordinate.latitude - latDeltaDegrees);\n  const bitsLat = Math.floor(latitudeBitsForResolution(size)) * 2;\n  const bitsLongNorth = Math.floor(longitudeBitsForResolution(size, latitudeNorth)) * 2 - 1;\n  const bitsLongSouth = Math.floor(longitudeBitsForResolution(size, latitudeSouth)) * 2 - 1;\n  return Math.min(bitsLat, bitsLongNorth, bitsLongSouth, MAXIMUM_BITS_PRECISION);\n}\nfunction boundingBoxBitsForRegion(region: IGeoRegion): number {\n  const { northEast, southEast, northWest, southWest } = geoRegionToPoints(region);\n  const bitsLat =\n    Math.floor(latitudeBitsForResolution(calculateGeoDistance(northEast, southEast) * 0.5)) * 2;\n  const bitsLongNorth =\n    Math.floor(\n      longitudeBitsForResolution(\n        calculateGeoDistance(northEast, northWest) * 0.5,\n        northWest.latitude\n      )\n    ) *\n      2 -\n    1;\n  const bitsLongSouth =\n    Math.floor(\n      longitudeBitsForResolution(\n        calculateGeoDistance(southEast, southWest) * 0.5,\n        southWest.latitude\n      )\n    ) *\n      2 -\n    1;\n  return Math.min(bitsLat, bitsLongNorth, bitsLongSouth, MAXIMUM_BITS_PRECISION);\n}\n\n/**\n * Calculates eight points on the bounding box and the center of a given circle. At least one\n * geohash of these nine coordinates, truncated to a precision of at most radius, are guaranteed\n * to be prefixes of any geohash that lies within the circle.\n * @ignore\n * @param {object} center The center given as {latitude, longitude}.\n * @param {number} radius The radius of the circle in meters.\n * @returns The eight bounding box points.\n */\nfunction boundingBoxCoordinates(center: IGeoPoint, radius: number): number[][] {\n  const latDegrees = radius / METERS_PER_DEGREE_LATITUDE;\n  const latitudeNorth = Math.min(90, center.latitude + latDegrees);\n  const latitudeSouth = Math.max(-90, center.latitude - latDegrees);\n  const longDegsNorth = metersToLongitudeDegrees(radius, latitudeNorth);\n  const longDegsSouth = metersToLongitudeDegrees(radius, latitudeSouth);\n  const longDegs = Math.max(longDegsNorth, longDegsSouth);\n  return [\n    [center.latitude, center.longitude],\n    [center.latitude, wrapLongitude(center.longitude - longDegs)],\n    [center.latitude, wrapLongitude(center.longitude + longDegs)],\n    [latitudeNorth, center.longitude],\n    [latitudeNorth, wrapLongitude(center.longitude - longDegs)],\n    [latitudeNorth, wrapLongitude(center.longitude + longDegs)],\n    [latitudeSouth, center.longitude],\n    [latitudeSouth, wrapLongitude(center.longitude - longDegs)],\n    [latitudeSouth, wrapLongitude(center.longitude + longDegs)],\n  ];\n}\n\n/**\n * Calculates eight points on the bounding box and the center of a region box. At least one\n * geohash of these nine coordinates, truncated to a precision of at most radius, are guaranteed\n * to be prefixes of any geohash that lies within the circle.\n * @ignore\n * @param {object} region The region given as {latitude, longitude, latitudeDelta, longitudeDelta}.\n * @returns The eight bounding box points.\n */\nfunction boundingBoxCoordinatesForRegion(region: IGeoRegion): number[][] {\n  const { northEast, northWest, southWest } = geoRegionToPoints(region);\n  return [\n    [region.latitude, region.longitude],\n    [region.latitude, northEast.longitude],\n    [region.latitude, northWest.longitude],\n    [northWest.latitude, region.longitude],\n    [northWest.latitude, northEast.longitude],\n    [northWest.latitude, northWest.longitude],\n    [southWest.latitude, region.longitude],\n    [southWest.latitude, northEast.longitude],\n    [southWest.latitude, northWest.longitude],\n  ];\n}\n\n/**\n * Calculates the bounding box query for a geohash with x bits precision.\n * @ignore\n * @param {string} geohash The geohash whose bounding box query to generate.\n * @param {number} bits The number of bits of precision.\n * @returns A [start, end] pair of geohashes.\n */\nfunction geohashQuery(geohash1: string, bits: number): string[] {\n  validateGeohash(geohash1);\n  const precision = Math.ceil(bits / BITS_PER_CHAR);\n  if (geohash1.length < precision) {\n    return [geohash1, geohash1 + '~'];\n  }\n  const geohash = geohash1.substring(0, precision);\n  const base = geohash.substring(0, geohash.length - 1);\n  const lastValue = BASE32.indexOf(geohash.charAt(geohash.length - 1));\n  const significantBits = bits - base.length * BITS_PER_CHAR;\n  const unusedBits = BITS_PER_CHAR - significantBits;\n  // delete unused bits\n  const startValue = (lastValue >> unusedBits) << unusedBits;\n  const endValue = startValue + (1 << unusedBits);\n  if (endValue > 31) {\n    return [base + BASE32[startValue], base + '~'];\n  } else {\n    return [base + BASE32[startValue], base + BASE32[endValue]];\n  }\n}\n\n/**\n * Calculates a set of geohash queries to fully contain a given circle. A query is a [start, end] pair\n * where any geohash is guaranteed to be lexiographically larger then start and smaller than end.\n *\n * @param {object} center The center given as {latitude, longitude}.\n * @param {number} radius The radius of the circle in meters.\n * @return An array of geohashes containing a [start, end] pair.\n */\nexport function getGeohashesForRadius(center: IGeoPoint, radius: number): string[][] {\n  validateLocation(center);\n  const bits = Math.max(1, boundingBoxBits(center, radius));\n  const precision = Math.ceil(bits / BITS_PER_CHAR);\n  const coordinates = boundingBoxCoordinates(center, radius);\n  const queries = coordinates.map(coordinate => {\n    return geohashQuery(encodeGeohash(toGeoPoint(coordinate), precision), bits);\n  });\n  // remove duplicates\n  return queries.filter((query, index) => {\n    return !queries.some((other, otherIndex) => {\n      return index > otherIndex && query[0] === other[0] && query[1] === other[1];\n    });\n  });\n}\n\n/**\n * Calculates a set of geohash queries to fully contain a given region box. A query is a [start, end] pair\n * where any geohash is guaranteed to be lexiographically larger then start and smaller than end.\n *\n * @param {object} region The region given as {latitude, longitude, latitudeDelta, longitudeDelta}.\n * @return An array of geohashes containing a [start, end] pair.\n */\nexport function getGeohashesForRegion(region: IGeoRegion): string[][] {\n  validateRegion(region);\n  const bits = Math.max(1, boundingBoxBitsForRegion(region));\n  const precision = Math.ceil(bits / BITS_PER_CHAR);\n  const coordinates = boundingBoxCoordinatesForRegion(region);\n  const queries = coordinates.map(coordinate => {\n    const geohash = encodeGeohash(toGeoPoint(coordinate), precision);\n    const query = geohashQuery(geohash, bits);\n    /* console.log(\n\t\t\tgeohash,\n\t\t\t\", index: \",\n\t\t\tindex,\n\t\t\t\", query: \",\n\t\t\tquery,\n\t\t\t\", precision: \",\n\t\t\tprecision\n\t\t); */\n    return query;\n  });\n  // remove duplicates\n  return queries.filter((query, index) => {\n    return !queries.some((other, otherIndex) => {\n      return index > otherIndex && query[0] === other[0] && query[1] === other[1];\n    });\n  });\n}\n\n/**\n * Flattens a query start-geohash; and end-geohash into all its individual geohash components.\n *\n * @param {string} geohash1 The geohash from range\n * @param {string} geohash2 The geohash to range\n */\nexport function flattenGeohashRange(geohash1: string, geohash2: string): string[] {\n  if (geohash1.length !== geohash2.length) {\n    throw new Error('Geohash lengths must be the same');\n  }\n  const res: string[] = [geohash1];\n  let hash = geohash1;\n  while (hash < geohash2) {\n    for (let i = geohash1.length - 1; i >= 0; i--) {\n      const idx = BASE32.indexOf(hash.charAt(i));\n      if (idx < BASE32.length - 1) {\n        hash = hash.substring(0, i) + BASE32[idx + 1] + hash.substring(i + 1);\n        if (hash < geohash2) {\n          res.push(hash);\n        }\n        break;\n      } else {\n        hash = hash.substring(0, i) + BASE32[0] + hash.substring(i + 1);\n      }\n      if (hash >= geohash2) {\n        break;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Flattens a set of geo-hash queries into a single array of geohash tiles.\n *\n * @param {string[][]} geohashes The geohashes array\n */\nexport function flattenGeohashes(geohashes: string[][]): string[] {\n  const set = new Set<string>();\n  geohashes.forEach(a => flattenGeohashRange(a[0], a[1]).forEach(geohash => set.add(geohash)));\n  return Array.from(set);\n}\n\n/**\n * Method which calculates the distance, in meters, between two locations,\n * via the Haversine formula. Note that this is approximate due to the fact that the\n * Earth's radius varies between 6356.752 km and 6378.137 km.\n *\n * @param {object} location1 The {latitude, longitude} of the first location.\n * @param {object} location2 The {latitude, longitude} of the second location.\n * @returns The distance, in meters, between the inputted locations.\n */\nexport function calculateGeoDistance(location1: IGeoPoint, location2: IGeoPoint): number {\n  validateLocation(location1);\n  validateLocation(location2);\n\n  const radius = 6371; // Earth's radius in kilometers\n  const latDelta = degreesToRadians(location2.latitude - location1.latitude);\n  const lonDelta = degreesToRadians(location2.longitude - location1.longitude);\n\n  const a =\n    Math.sin(latDelta / 2) * Math.sin(latDelta / 2) +\n    Math.cos(degreesToRadians(location1.latitude)) *\n      Math.cos(degreesToRadians(location2.latitude)) *\n      Math.sin(lonDelta / 2) *\n      Math.sin(lonDelta / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return radius * c * 1000;\n}\n\nexport function insideGeoRegion(point: IGeoPoint, region: IGeoRegion): boolean {\n  if (\n    point.latitude < region.latitude - region.latitudeDelta * 0.5 ||\n    point.latitude > region.latitude + region.latitudeDelta * 0.5\n  ) {\n    return false;\n  }\n  // TODO - wrap longitude?\n  if (\n    point.longitude < region.longitude - region.longitudeDelta * 0.5 ||\n    point.longitude > region.longitude + region.longitudeDelta * 0.5\n  ) {\n    return false;\n  }\n  return true;\n}\n","import { runInAction, observable, makeObservable, computed, IObservableValue } from 'mobx';\n\nimport AggregateCollection, {\n  IAggregateCollectionOptions,\n  IAggregateCollectionQuery,\n  AggregateCollectionQueriesFn,\n} from './AggregateCollection';\nimport { IGeoRegion, getGeohashesForRegion } from './GeoHash';\nimport { CollectionSource, ICollectionDocument } from './Types';\nimport { getContext } from './init';\n\nexport type GeoQueryRegion = IGeoRegion | (() => IGeoRegion | void);\nexport type GeoQueryHash = string[];\n\nexport interface IGeoQueryQuery extends IAggregateCollectionQuery {\n  geohash: GeoQueryHash;\n}\n\nexport interface IGeoQueryOptions<T>\n  extends Omit<IAggregateCollectionOptions<T, IGeoQueryQuery>, 'queries'> {\n  queries?: AggregateCollectionQueriesFn<IGeoQueryQuery>;\n  region?: GeoQueryRegion;\n  fieldPath?: string;\n  filterBy?: (doc: T, region?: IGeoRegion | void) => boolean;\n}\n\n/**\n * GeoQuery makes it possible to perform efficient geographical based queries\n * with the use of geo-hashes.\n *\n * In order to use GeoQuery, each document needs a `geohash` field stored in the\n * root of the document. The value of the `geohash` field should be a geo-hash\n * encoded using `encodeGeohash`.\n *\n * @extends AggregateCollection\n * @param {CollectionSource} [source] String-path, ref or function that returns a path or ref\n * @param {Object} [options] Configuration options\n * @param {IGeoRegion} [options.region] See `GeoQuery.region`\n * @param {string} [options.fieldPath] Field to query on (default = `geohash`)\n *\n * @example\n *\n * const query = new GeoQuery('bookings', {\n *   region = {\n *     latitude: 51.45663,\n *     longitude: 5.223,\n *     latitudeDelta: 0.1,\n *     longitudeDelta: 0.1,\n *   }\n * });\n *\n * // Bookings needs to contain documents with a `geohash`\n * // field in the root, like this:\n * // {\n * //   ...\n * //   geohash: 'jhdb23'\n * //   ...\n * // }\n *\n * autorun(() => {\n *   query.docs.map(doc => console.log('doc: ', doc.id, doc.data));\n * });\n */\nclass GeoQuery<T extends ICollectionDocument> extends AggregateCollection<T, IGeoQueryQuery> {\n  private regionObservable: IObservableValue<GeoQueryRegion | void>;\n\n  constructor(source: CollectionSource, options?: IGeoQueryOptions<T>) {\n    const { region, fieldPath = 'geohash', filterBy, ...otherOptions } = options || {};\n    const regionObservable: IObservableValue<GeoQueryRegion | void> = observable.box(region);\n    super(source, {\n      filterBy: filterBy\n        ? (doc: T) => {\n            let regionVal = regionObservable.get();\n            regionVal = typeof regionVal === 'function' ? regionVal() : regionVal;\n            return filterBy(doc, regionVal);\n          }\n        : undefined,\n      queries: () => {\n        let regionVal = regionObservable.get();\n        regionVal = typeof regionVal === 'function' ? regionVal() : regionVal;\n        const geohashes = regionVal ? getGeohashesForRegion(regionVal) : undefined;\n        if (!geohashes) {\n          return null;\n        }\n        const { query, where } = getContext(this);\n        return geohashes.map(geohash => ({\n          geohash,\n          key: `${geohash[0]}-${geohash[1]}`,\n          query: ref =>\n            query(ref, where(fieldPath, '>=', geohash[0]), where(fieldPath, '<', geohash[1])),\n        }));\n      },\n      ...otherOptions,\n    });\n    this.regionObservable = regionObservable;\n    makeObservable(this, {\n      geohashes: computed,\n    });\n  }\n\n  /**\n   * Geographical region to query for.\n   *\n   * Use this property to get or set the region in which\n   * to perform a aggregate geohash query.\n   *\n   * @type {GeoQueryRegion}\n   *\n   * @example\n   * const query = new GeoQuery('bookings');\n   *\n   * // Bookings needs to contain documents with a `geohash`\n   * // field in the root, like this:\n   * // {\n   * //   ...\n   * //   geohash: 'jhdb23'\n   * //   ...\n   * // }\n   *\n   * ...\n   * // Set the region to query for\n   * query.region = {\n   *   latitude: 51.45663,\n   *   longitude: 5.223,\n   *   latitudeDelta: 0.1,\n   *   longitudeDelta: 0.1,\n   * }\n   */\n  get region(): GeoQueryRegion | void {\n    return this.regionObservable.get();\n  }\n  set region(val: GeoQueryRegion | void) {\n    runInAction(() => this.regionObservable.set(val));\n  }\n\n  /**\n   * Geo-hashes that are queries for the given region.\n   *\n   * @type {GeoQueryHash[]}\n   *\n   * @example\n   * const query = new GeoQuery('bookings', {\n   *   region: {\n   *     latitude: 51.45663,\n   *     longitude: 5.223,\n   *     latitudeDelta: 0.1,\n   *     longitudeDelta: 0.1\n   *   }\n   * });\n   * ...\n   * // Get the in-use geohashes\n   * console.log(query.geohashes);\n   * // [['todo', 'todo2], ...]\n   */\n  get geohashes(): GeoQueryHash[] {\n    const queries = this.queries();\n    return queries ? queries.map(query => query.geohash) : [];\n  }\n}\n\nexport default GeoQuery;\n","import AggregateCollection from './AggregateCollection';\nimport Collection from './Collection';\nimport Document from './Document';\nimport {\n  decodeGeohash,\n  encodeGeohash,\n  getGeohashesForRadius,\n  getGeohashesForRegion,\n  flattenGeohashRange,\n  flattenGeohashes,\n  calculateGeoDistance,\n  insideGeoRegion,\n  geoRegionToPoints,\n  metersToLatitudeDegrees,\n  metersToLongitudeDegrees,\n} from './GeoHash';\nimport GeoQuery from './GeoQuery';\nimport { Mode } from './Types';\nimport { mergeUpdateData, isTimestamp } from './Utils';\n\nexport * from './init';\nexport * from './compat';\n// export * from './init/web'; // <-- This one might causes problems on RN\n\nexport {\n  Collection,\n  Document,\n  AggregateCollection,\n  mergeUpdateData,\n  Mode,\n  isTimestamp,\n  // Geo queries\n  GeoQuery,\n  decodeGeohash,\n  encodeGeohash,\n  getGeohashesForRadius,\n  getGeohashesForRegion,\n  flattenGeohashRange,\n  flattenGeohashes,\n  calculateGeoDistance,\n  insideGeoRegion,\n  geoRegionToPoints,\n  metersToLatitudeDegrees,\n  metersToLongitudeDegrees,\n};\nexport type {\n  DocumentSource,\n  IDocumentOptions,\n  IDocument,\n  ICollection,\n  CollectionSource,\n  CollectionQuery,\n  ICollectionOptions,\n  ICollectionDocument,\n  IContext,\n  IHasContext\n} from './Types';\nexport type {\n  AggregateCollectionOrderBy,\n  AggregateCollectionFilterBy,\n  IAggregateCollectionQuery,\n  AggregateCollectionQueries,\n  AggregateCollectionQueriesFn,\n  IAggregateCollectionOptions,\n} from './AggregateCollection';\nexport type { IGeoPoint, IGeoRegion, GeoHash } from './GeoHash';\nexport type { GeoQueryRegion, GeoQueryHash, IGeoQueryQuery, IGeoQueryOptions } from './GeoQuery';\n\nexport const ModuleName = 'firestorter';"],"names":["undefined","Mode","makeCompatContext","config","firebase","app","firestore","Error","collection","path","doc","getDocs","ref","get","where","fieldPath","opStr","value","query","where1","where2","where3","addDoc","data","add","getDoc","setDoc","options","set","updateDoc","fields","update","deleteDoc","onSnapshot","resultFn","errorFn","deleteField","FieldValue","serverTimestamp","globalContext","initFirestorter","context","getContext","obj","mergeUpdateData","hasContext","res","canonicalDelete","key","hasOwnProperty","val","isDelete","isEqual","paths","split","dataVal","i","length","verifyMode","mode","isTimestamp","Date","seconds","nanoseconds","enhancedObservable","delegate","o","Array","isArray","observable","array","box","isObserved","onBecomeUnobserved","releaseObserverRef","onBecomeObserved","addObserverRef","resolveRef","EMPTY_OPTIONS","Document","source","schema","snapshot","snapshotOptions","debug","debugName","debugInstanceName","sourceInput","ctx","refObservable","docSchema","isVerbose","snapshotObservable","collectionRefCount","observedRefCount","_validateSchema","dataObservable","modeObservable","Auto","isLoadingObservable","_updateSourceObserver","On","runInAction","_updateRealtimeUpdates","console","warn","toJS","err","Promise","reject","merge","fetch","isActive","_ready","_updateFromSnapshot","JSON","stringify","log","message","ready","readyPromise","resolve","toString","addCollectionRef","releaseCollectionRef","updateFromCollectionSnapshot","complete","readyResolve","readyResolveFn","_onSnapshot","error","_onSnapshotError","force","newActive","Off","active","onSnapshotUnsubscribeFn","sourceDisposerFn","reaction","constructor","name","id","exists","parent","documentPath","Collection","createDocument","minimizeUpdates","initialLocalSnapshotDetectTime","initialLocalSnapshotDebounceTime","isMinimizingUpdates","docLookup","queryInput","queryRefObservable","isLoadedObservable","hasDocsObservable","docsObservable","docSource","docOptions","colRef","_resolveRef","queryRef","_resolveQuery","docs","metadata","ref2","deleteAll","sourceCache","sourceCacheRef","collectionRef","initialLocalSnapshotDebounceTimer","clearTimeout","timeElapsed","now","initialLocalSnapshotStartTime","setTimeout","newDocs","forEach","docSnapshot","push","replace","n","updateSourceRef","updateQueryRef","onSnapshotUnsubscribe","refDisposerFn","onSnapshotRefCache","initialSourceRef","initialQueryRef","sourceRef","queryRef2","docChanges","empty","size","collectionPath","AggregateCollection","documentRecycleMap","makeObservable","computed","collectionSource","queriesFn","queries","orderBy","filterBy","collections","prevCollections","collectionRecycleMap","disposer","autorun","_updateQueries","Object","values","cols","map","col","_onCreateDocument","index","slice","hasAllData","isLoading","filter","sort","reduce","acc","isLoaded","GEOHASH_PRECISION","BASE32","EARTH_MERI_CIRCUMFERENCE","METERS_PER_DEGREE_LATITUDE","BITS_PER_CHAR","MAXIMUM_BITS_PRECISION","EARTH_EQ_RADIUS","E2","EPSILON","toGeoPoint","location","latitude","longitude","log2","x","Math","validateLatitude","isNaN","validateLongitude","validateLocation","validateRegion","region","latitudeDelta","longitudeDelta","validateGeohash","geohash","letter","indexOf","geoRegionToPoints","north","south","east","wrapLongitude","west","northEast","northWest","southEast","southWest","degreesToRadians","degrees","PI","encodeGeohash","precision","round","latitudeRange","max","min","longitudeRange","hash","hashVal","bits","even","range","mid","decodeGeohash","evenBit","latMin","latMax","lonMin","lonMax","chr","charAt","idx","bitN","lonMid","latMid","metersToLongitudeDegrees","distance","radians","num","cos","denom","sqrt","sin","deltaDeg","metersToLatitudeDegrees","longitudeBitsForResolution","resolution","degs","abs","latitudeBitsForResolution","adjusted","boundingBoxBits","coordinate","latDeltaDegrees","latitudeNorth","latitudeSouth","bitsLat","floor","bitsLongNorth","bitsLongSouth","boundingBoxBitsForRegion","calculateGeoDistance","boundingBoxCoordinates","center","radius","latDegrees","longDegsNorth","longDegsSouth","longDegs","boundingBoxCoordinatesForRegion","geohashQuery","geohash1","ceil","substring","base","lastValue","significantBits","unusedBits","startValue","endValue","getGeohashesForRadius","coordinates","some","other","otherIndex","getGeohashesForRegion","flattenGeohashRange","geohash2","flattenGeohashes","geohashes","Set","a","from","location1","location2","latDelta","lonDelta","c","atan2","insideGeoRegion","point","GeoQuery","otherOptions","regionObservable","regionVal","ModuleName"],"mappings":"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"}